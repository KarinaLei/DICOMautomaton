.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "DICOMautomaton Reference Manual" "" "" "" ""
.hy
.SH Overview
.SS About
.PP
DICOMautomaton is a collection of software tools for processing and
analyzing medical images.
Once a workflow has been developed, the aim of DICOMautomaton is to
require minimal interaction to perform the workflow in an automated way.
However, some interactive tools are also included for workflow
development, exploratory analysis, and contouring.
.PP
DICOMautomaton is meant to be flexible enough to adapt to a wide variety
of situations and has been incorporated into projects to provide: a
local PACs, image analysis for various types of QA, kinetic modeling of
perfusion images, automated fuzzy mapping of ROI names to a standard
lexicon, dosimetric analysis, TCP and NTCP modeling, ROI contour/volume
manipulation, estimation of surface dose, ray casting through patient
and phantom geometry, rudimentary linac beam optimization, radiomics,
and has been used in various ways to explore the relationship between
toxicity and dose in sub\-organ compartments.
.PP
Note: DICOMautomaton should \f[B]NOT\f[] be used for clinical purposes.
It is experimental software.
It is suitable for research or support tool purposes only.
It comes with no warranty or guarantee of any kind, either explicit or
implied.
Users of DICOMautomaton do so fully at their own risk.
.SS Project Home
.PP
This project's homepage can be found at <http://www.halclark.ca/>.
The source code is available at either
<https://gitlab.com/hdeanclark/DICOMautomaton/> or
<https://github.com/hdclark/DICOMautomaton/>.
.SS Download
.PP
DICOMautomaton relies only on open source software and is itself open
source software.
Source code is available at <https://github.com/hdclark/DICOMautomaton>.
.PP
Currently, binaries are not provided.
Only linux is supported and a recent C++ compiler is needed.
A \f[C]PKGBUILD\f[] file is provided for Arch Linux and derivatives, and
CMake can be used to generate deb files for Debian derivatives.
A docker container is available for easy portability to other systems.
DICOMautomaton has successfully run on x86, x86_64, and most ARM
systems.
To maintain flexibility, DICOMautomaton is generally not ABI or API
stable.
.SS License and Copying
.PP
All materials herein which may be copywrited, where applicable, are.
Copyright 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019 hal
clark.
See the \f[C]LICENSE\f[] file for details about the license.
Informally, DICOMautomaton is available under a GPLv3+ license.
The Imebra library is bundled for convenience and was not written by hal
clark; consult its license file in \f[C]src/imebra/license.txt\f[].
.PP
All liability is herefore disclaimed.
The person(s) who use this source and/or software do so strictly under
their own volition.
They assume all associated liability for use and misuse, including but
not limited to damages, harm, injury, and death which may result,
including but not limited to that arising from unforeseen and
unanticipated implementation defects.
.SS Dependencies
.PP
Dependencies are listed in the \f[C]PKGBUILD\f[] file (using Arch Linux
package naming conventions) and in the \f[C]CMakeLists.txt\f[] file
(Debian package naming conventions) bundled with the source code.
See <https://github.com/hdclark/DICOMautomaton>.
Broadly, DICOMautomaton depends on Boost, CGAL, SFML, Eigen, Asio, Wt,
and PostgreSQL.
.PP
Notably, DICOMautomaton depends on the author's `Ygor,' `Explicator,'
and `YgorClustering' projects.
See <https://gitlab.com/hdeanclark/Ygor> (mirrored at
<https://github.com/hdclark/Ygor>),
<https://gitlab.com/hdeanclark/Explicator> (mirrored at
<https://github.com/hdclark/Explicator>), and (only for compilation)
<https://gitlab.com/hdeanclark/YgorClustering> (mirrored at
<https://github.com/hdclark/YgorClustering>).
.SS Feedback
.PP
All feedback, questions, comments, and pull requests are welcomed.
.SS FAQs
.PP
\f[B]Q.\f[] What is the best way to use DICOMautomaton?
.PD 0
.P
.PD
\f[B]A.\f[] DICOMautomaton provides a command\-line interface,
SFML\-based image viewer, and limited web interface.
The command\-line interface is most conducive to automation, the viewer
works best for interactive tasks, and the web interface works well for
specific installations.
.PP
\f[B]Q.\f[] How do I contribute, report bugs, or contact the author?
.PD 0
.P
.PD
\f[B]A.\f[] All feedback, questions, comments, and pull requests are
welcomed.
Please find contact information at
<https://github.com/hdclark/DICOMautomaton>.
.SS Citing
.PP
Several publications and presentations refer to DICOMautomaton or
describe some aspect of it.
Here are a few:
.IP \[bu] 2
H.
Clark, J.
Beaudry, J.
Wu, and S.
Thomas.
Making use of virtual dimensions for visualization and contouring.
Poster presentation at the International Conference on the use of
Computers in Radiation Therapy, London, UK.
June 27\-30, 2016.
.IP \[bu] 2
H.
Clark, S.
Thomas, V.
Moiseenko, R.
Lee, B.
Gill, C.
Duzenli, and J.
Wu.
Automated segmentation and dose\-volume analysis with DICOMautomaton.
In the Journal of Physics: Conference Series, vol.\ 489, no.
1, p.\ 012009.
IOP Publishing, 2014.
.IP \[bu] 2
H.
Clark, J.
Wu, V.
Moiseenko, R.
Lee, B.
Gill, C.
Duzenli, and S.
Thomas.
Semi\-automated contour recognition using DICOMautomaton.
In the Journal of Physics: Conference Series, vol.\ 489, no.
1, p.\ 012088.
IOP Publishing, 2014.
.IP \[bu] 2
H.
Clark, J.
Wu, V.
Moiseenko, and S.
Thomas.
Distributed, asynchronous, reactive dosimetric and outcomes analysis
using DICOMautomaton.
Poster presentation at the COMP Annual Scientific Meeting, Banff,
Canada.
July 9\[en]12,
.RS 2
.RE
.PP
If you use DICOMautomaton in an academic work, we ask that you please
cite the most relevant publication for that work, if possible.
.SS Components
.SS dicomautomaton_dispatcher
.SS Description
.PP
The core command\-line interface to DICOMautomaton is the
\f[C]dicomautomaton_dispatcher\f[] program.
It is presents an interface based on chaining of discrete operations on
collections of images, DICOM images, DICOM radiotherapy files (RTSTRUCTS
and RTDOSE), and various other types of files.
\f[C]dicomautomaton_dispatcher\f[] has access to all defined operations
described in Operations.
It can be used to launch both interactive and non\-interactive tasks.
Data can be sourced from a database or files in a variety of formats.
.PP
Name/label selectors in dicomautomaton_dispatcher generally support
fuzzy matching via
libexplicator (https://gitlab.com/hdeanclark/Explicator) or regular
expressions.
The operations and parameters that provide these options are documented
in Operations.
.PP
Filetype support differs in some cases.
A custom FITS file reader and writer are supported, and DICOM files are
generally supported.
There is currently no support for RTPLANs, though DICOM image, RTSTRUCT,
and RTDOSE files are well supported.
There is limited support for writing files \[en] currently JPEG, PNG,
and FITS images; RTDOSE files; and Boost.Serialize archive writing are
supported.
.SS Usage Examples
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ CT*dcm\f[]
.PD 0
.P
.PD
\f[I]Launch the default interactive viewer to inspect a collection of
computed tomography images.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ MR*dcm\f[]
.PD 0
.P
.PD
\f[I]Launch the default interactive viewer to inspect a collection of
magnetic resonance images.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ \-o\ SFML_Viewer\ MR*dcm\f[]
.PD 0
.P
.PD
\f[I]Launch the default interactive viewer to inspect a collection of
magnetic resonance images. Note that files specified on the command line
are always loaded \f[BI]prior\f[I] to running any operations. Injecting
files midway through the operation chain must make use of an operation
designed to do so.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ CT*dcm\ RTSTRUCT*dcm\ RTDOSE*dcm\ \-o\ Average\ \-o\ SFML_Viewer\f[]
.PD 0
.P
.PD
\f[I]Load DICOM files, perform an averaging operation, and then launch
the SFML viewer to inspect the output.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ ./RTIMAGE.dcm\ \-o\ AnalyzePicketFence:ImageSelection=\[aq]last\[aq]:InteractivePlots=\[aq]false\[aq]\f[]
.PD 0
.P
.PD
\f[I]Perform a picket fence analysis of an RTIMAGE file.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ \-f\ create_temp_view.sql\ \-f\ select_records_from_temp_view.sql\ \-o\ ComputeSomething\f[]
.PD 0
.P
.PD
\f[I]Load a SQL common file that creates a SQL view, issue a query
involving the view which returns some DICOM file(s). Perform analysis
`ComputeSomething' with the files.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ \-f\ common.sql\ \-f\ seriesA.sql\ \-n\ \-f\ seriesB.sql\ \-o\ SFML_Viewer\f[]
.PD 0
.P
.PD
\f[I]Load two distinct groups of data. The second group does not `see'
the file `common.sql' side effects \[en] the queries are totally
separate.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ fileA\ fileB\ \-s\ fileC\ adir/\ \-m\ PatientID=XYZ003\ \-o\ ComputeXYZ\ \-o\ SFML_Viewer\f[]
.PD 0
.P
.PD
\f[I]Load standalone files and all files in specified directory. Inform
the analysis `ComputeXYZ' of the patient's ID, launch the analysis, and
then interactively view.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_dispatcher\ CT*dcm\ \-o\ ModifyingOperation\ \-o\ BoostSerializeDrover\f[]
.PD 0
.P
.PD
\f[I]Launch the default interactive viewer to inspect a collection of
computed tomography images, perform an operation that modifies them, and
serialize the internal state for later using the BoostSerializeDrover
operation.\f[]
.SS dicomautomaton_webserver
.SS Description
.PP
This web server presents most operations in an interactive web page.
Some operations are disabled by default (e.g., BuildLexiconInteractively
because they are not designed to be operated via remote procedure calls.
This routine should be run within a capability\-limiting environment,
but access to an X server is required.
A Docker script is bundled with DICOMautomaton sources which includes
everything needed to function properly.
.SS Usage Examples
.IP \[bu] 2
\f[C]dicomautomaton_webserver\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options. Note that most
configuration is done via editing configuration files. See
\f[CI]/etc/DICOMautomaton/\f[I].\f[]
.IP \[bu] 2
\f[C]dicomautomaton_webserver\ \-\-config\ /etc/DICOMautomaton/webserver.conf\ \-\-http\-address\ 0.0.0.0\ \-\-http\-port\ 8080\ \-\-docroot=\[aq]/etc/DICOMautomaton/\[aq]\f[]
.PD 0
.P
.PD
\f[I]Launch the webserver on any interface and port 8080.\f[]
.SS dicomautomaton_bsarchive_convert
.SS Description
.PP
A program for converting Boost.Serialization archives types which
DICOMautomaton can read.
These archives need to be created by the BoostSerializeDrover operation.
Some archive types are concise and not portable (i.e., binary archives),
or verbose (and thus slow to read and write) and portable (i.e., XML,
plain text).
To combat verbosity, on\-the\-fly gzip compression and decompression is
supported.
This program can be used to convert archive types.
.SS Usage Examples
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.binary\ \-o\ file.xml\ \-t\ \[aq]XML\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a binary archive to a portable XML archive.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.binary.gz\ \-o\ file.xml.gz\ \-t\ \[aq]gzip\-xml\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a binary archive to a gzipped portable XML archive.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.binary.gz\ \-o\ file.xml\ \-t\ \[aq]XML\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a gzipped binary archive to a non\-gzipped portable XML
archive.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.xml.gz\ \-o\ file.txt\ \-t\ \[aq]txt\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a gzipped binary archive to a non\-gzipped, portable, and
inspectable text archive.\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.txt\ \-o\ file.txt.gz\ \-t\ \[aq]gzip\-txt\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert an uncompressed text archive to a compressed text archive.
Note that this conversion is effectively the same as simply
\f[CI]gzip\ file.txt\f[I].\f[]
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.xml.gz\ \-o\ file.bin\ \-t\ \[aq]binary\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a compressed archive to a binary file.\f[] Note that binary
archives should only expect to be readable on the same hardware with the
same versions and are therefore best for checkpointing calculations that
can fail or may need to be tweaked later.*
.IP \[bu] 2
\f[C]dicomautomaton_bsarchive_convert\ \-i\ file.xml.gz\ \-o\ file.bin.gz\ \-t\ \[aq]gzip\-binary\[aq]\f[]
.PD 0
.P
.PD
\f[I]Convert a compressed archive to a compressed binary file..\f[]
.SS dicomautomaton_dump
.SS Description
.PP
This program is extremely simplistic.
Given a single DICOM file, it prints to stdout the value of one DICOM
tag.
This program is best used in scripts, for example to check the modality
or a file.
.SS Usage Examples
.IP \[bu] 2
\f[C]dicomautomaton_dump\ afile.dcm\ 0x0008\ 0x0060\f[]
.PD 0
.P
.PD
\f[I]Print the value of the DICOM tag (0x0008,0x0060) aka
(0008,0060).\f[]
.SS pacs_ingress
.SS Description
.PP
Given a DICOM file and some additional metadata, insert the data into a
PACs system database.
The file itself will be copied into the database and various bits of
data will be deciphered.
Note that at the moment a `gdcmdump' file must be provided and is stored
alongside the DICOM file in the database filestore.
This sidecar file is meant to support ad\-hoc DICOM queries without
having to index the entire file.
Also note that imports into the database are minimal, leaving files with
multiple NULL values.
This is done to improve ingress times.
A separate database refresh (pacs_refresh) must be performed to replace
NULL values.
.SS Usage Examples
.IP \[bu] 2
\f[C]pacs_ingress\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.IP \[bu] 2
\f[C]pacs_ingress\ \-f\ \[aq]/tmp/a.dcm\[aq]\ \-g\ \[aq]/tmp/a.gdcmdump\[aq]\ \-p\ \[aq]XYZ\ Study\ 2019\[aq]\ \-c\ \[aq]Study\ concerning\ XYZ.\[aq]\f[]
.PD 0
.P
.PD
\f[I]Insert the file `/tmp/a.dcm' into the database.\f[]
.SS pacs_refresh
.SS Description
.PP
A program for trying to replace database NULLs, if possible, using
stored files.
This program is complementary to pacs_ingress.
Note that the \f[C]\-\-days\-back/\-d\f[] parameter should always be
specified.
.SS Usage Examples
.IP \[bu] 2
\f[C]pacs_refresh\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.IP \[bu] 2
\f[C]pacs_refresh\ \-d\ 7\f[]
.PD 0
.P
.PD
\f[I]Perform a refresh of the database, restricting to files imported
within the previous 7 days.\f[]
.SS pacs_duplicate_cleaner
.SS Description
.PP
Given a DICOM file, check if it is in the PACS DB.
If so, delete the file.
Note that a full, byte\-by\-byte comparison is NOT performed \[en]
rather only the top\-level DICOM unique identifiers are (currently)
compared.
No other metadata is considered.
So this program is not suitable if DICOM files have been modified
without re\-assigning unique identifiers! (Which is non\-standard
behaviour.) Note that if an \f[I]exact\f[] comparison is desired, using
a traditional file de\-duplicator will work.
.SS Usage Examples
.IP \[bu] 2
\f[C]pacs_duplicate_cleaner\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.IP \[bu] 2
\f[C]pacs_duplicate_cleaner\ \-f\ \[aq]/path/to/a/dicom/file.dcm\[aq]\f[]
.PD 0
.P
.PD
\f[I]Check if `file.dcm' is already in the PACS DB. If so, delete it
(`file.dcm').\f[]
.IP \[bu] 2
\f[C]pacs_duplicate_cleaner\ \-f\ \[aq]/path/to/a/dicom/file.dcm\[aq]\ \-n\f[]
.PD 0
.P
.PD
\f[I]Check if `file.dcm' is already in the PACS DB, but do not delete
anything.\f[]
.SS automaton
.SS Description
.PP
An earlier prototype of dicomautomaton_dispatcher that will likely be
deprecated soon.
Use is discouraged.
The means of switching operations was via source editing and
recompilation.
.PP
This program allows for performing rapid, no\-nonsense, no\-GUI
computations using DICOM files.
As much as possible, emphasis is placed on having the program `do the
right thing', which refers to the attempts to deal with incomplete
information (such as missing files, non\-matching DICOM data sets, and
the careful treatment of existing data.)
.PP
This program is designed to accept an input structure name(s)
(pre\-sanitized or not) and some DICOM data, and then produce output for
the structure(s).
An example might be computation of a DVH for the left parotid.
.PP
In some ways this program is very forgiving of user behaviour, but in
general it has very strictly\-defined behaviour.
For example, input files can be either directories or files, and
non\-DICOM files will be automatically weeded\-out.
However, it is intentionally difficult to accidentally overwrite
existing data: if an output file already exists, will usually refuse to
overwrite it.
To be user\-friendly, though, a non\-existing filename will be chosen
and the the user will be warned.
This might occasionally be frustrating for the user, but is the `safe'
thing to do in most cases.
.SS Usage Examples
.IP \[bu] 2
\f[C]automaton\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.SS overlaydosedata
.SS Description
.PP
Like automaton, this program is an earlier prototype of
dicomautomaton_dispatcher that will likely be deprecated soon.
Use is discouraged.
The aim of overlaydosedata was to provide a semi\-interactive viewer
capable of simultaneous display of medical images, ROI structures, and
dose information.
.SS Usage Examples
.IP \[bu] 2
\f[C]overlaydosedata\ \-\-help\f[]
.PD 0
.P
.PD
\f[I]Print a listing of all available options.\f[]
.SH Operations
.SS AccumulateRowsColumns
.SS Description
.PP
This operation generates row\- and column\-profiles of images in which
the entire row or column has been summed together.
It is useful primarily for detection of axes\-aligned edges or ridges.
.SS Notes
.IP \[bu] 2
It is often useful to pre\-process inputs by computing an
in\-image\-plane derivative, gradient magnitude, or similar (i.e.,
something to emphasize edges) before calling this routine.
It is not necessary, however.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS AnalyzeLightRadFieldCoincidence
.SS Description
.PP
This operation analyzes the selected images to compare light and
radiation field coincidence for fixed, symmetric field sizes.
Coincidences are extracted automatically by fitting Gaussians to the
peak nearest to one of the specified field boundaries and comparing
offset from one another.
So, for example, a 10x10cm MLC\-defined field would be compared to a
15x15cm field if there are sharp edges (say, metal rulers) that define a
10x10cm field (i.e., considered to represent the light field).
Horizontal and vertical directions (both positive and negative) are all
analyzed separately.
.SS Notes
.IP \[bu] 2
This routine assumes both fields are squarely aligned with the image
axes.
Alignment need not be perfect, but the Gaussians may be significantly
broadened if there is misalignment.
This should be fixed in a future revision.
.IP \[bu] 2
It is often useful to pre\-process inputs by computing an
in\-image\-plane derivative, gradient magnitude, or similar (i.e.,
something to emphasize edges) before calling this routine.
It may not be necessary, however.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ToleranceLevel
.IP \[bu] 2
EdgeLengths
.IP \[bu] 2
SearchDistance
.IP \[bu] 2
PeakSimilarityThreshold
.IP \[bu] 2
UserComment
.IP \[bu] 2
OutputFileName
.IP \[bu] 2
InteractivePlots
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ToleranceLevel
.SS Description
.PP
Controls detected edge visualization for easy identification of edges
out of tolerance.
Note: this value refers to edge\-to\-edge separation, not
edge\-to\-nominal distances.
This value is in DICOM units.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"inf"\f[]
.SS EdgeLengths
.SS Description
.PP
Comma\-separated list of (symmetric) edge lengths fields should be
analyzed at.
For example, if 50x50, 100x100, 150x150, and 200x200 (all in mm) fields
are to be analyzed, this argument would be `50,100,150,200' and it will
be assumed that the field centre is at DICOM position (0,0,0).
All values are in DICOM units.
.SS Default
.IP \[bu] 2
\f[C]"100"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"50,100,150,200,300"\f[]
.IP \[bu] 2
\f[C]"10.273,20.2456"\f[]
.SS SearchDistance
.SS Description
.PP
The distance around the anticipated field edges to search for edges
(actually sharp peaks arising from edges).
If an edge is further away than this value from the anticipated field
edge, then the coincidence will be ignored altogether.
The value should be greater than the largest action/tolerance threshold
with some additional margin (so gross errors can be observed), but small
enough that spurious edges (i.e., unintended features in the image, such
as metal fasteners, or artifacts near the field edge) do not replace the
true field edges.
The `sharpness' of the field edge (resulting from the density of the
material used to demarcate the edge) can impact this value; if the edge
is not sharp, then the peak will be shallow, noisy, and may therefore
travel around depending on how the image is pre\-processed.
Note that both radiation field and light field edges may differ from the
`nominal' anticipated edges, so this wobble factor should be
incorporated in the search distance.
This quantity must be in DICOM units.
.SS Default
.IP \[bu] 2
\f[C]"3.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"2.5"\f[]
.IP \[bu] 2
\f[C]"3.0"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS PeakSimilarityThreshold
.SS Description
.PP
Images can be taken such that duplicate peaks will occur, such as when
field sizes are re\-used.
Peaks are therefore de\-duplicated.
This value (as a %, ranging from [0,100]) specifies the threshold of
disimilarity below which peaks are considered duplicates.
A low value will make duplicates confuse the analysis, but a high value
may cause legitimate peaks to be discarded depending on the attenuation
cababilties of the field edge markers.
.SS Default
.IP \[bu] 2
\f[C]"25"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"5"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
If left empty, the column will be omitted from the output.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"6MV"\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Test\ with\ thick\ metal\ edges"\f[]
.SS OutputFileName
.SS Description
.PP
A filename (or full path) in which to append field edge coincidence data
generated by this routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS InteractivePlots
.SS Description
.PP
Whether to interactively show plots showing detected edges.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS AnalyzePicketFence
.SS Description
.PP
This operation extracts MLC positions from a picket fence image.
.SS Notes
.IP \[bu] 2
This routine requires data to be pre\-processed.
The gross picket area should be isolated and the leaf junction areas
contoured (one contour per junction).
Both can be accomplished via thresholding.
.IP \[bu] 2
This routine analyzes the picket fences on the plane in which they are
specified within the DICOM file, which often coincides with the image
receptor (`RTImageSID').
Tolerances are evaluated on the isoplane, so the image is projected
before measuring distances, but the image itself is not altered; a
uniform magnification factor of SAD/SID is applied to all distances.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
MLCModel
.IP \[bu] 2
MLCROILabel
.IP \[bu] 2
JunctionROILabel
.IP \[bu] 2
PeakROILabel
.IP \[bu] 2
MinimumJunctionSeparation
.IP \[bu] 2
ThresholdDistance
.IP \[bu] 2
LeafGapsFileName
.IP \[bu] 2
ResultsSummaryFileName
.IP \[bu] 2
UserComment
.IP \[bu] 2
InteractivePlots
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS MLCModel
.SS Description
.PP
The MLC design geometry to use.
`VarianMillenniumMLC80' has 80 leafs in each bank; leaves are 10mm wide
at isocentre; and the maximum static field size is 40cm x 40cm.
`VarianMillenniumMLC120' has 120 leafs in each bank; the 40 central
leaves are 5mm wide at isocentre; the 20 peripheral leaves are 10mm
wide; and the maximum static field size is 40cm x 40cm.
`VarianHD120' has 120 leafs in each bank; the 32 central leaves are
2.5mm wide at isocentre; the 28 peripheral leaves are 5mm wide; and the
maximum static field size is 40cm x 22cm.
.SS Default
.IP \[bu] 2
\f[C]"VarianMillenniumMLC120"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"VarianMillenniumMLC80"\f[]
.IP \[bu] 2
\f[C]"VarianMillenniumMLC120"\f[]
.IP \[bu] 2
\f[C]"VarianHD120"\f[]
.SS MLCROILabel
.SS Description
.PP
An ROI imitating the MLC axes of leaf pairs is created.
This is the label to apply to it.
Note that the leaves are modeled with thin contour rectangles of
virtually zero area.
Also note that the outline colour is significant and denotes leaf pair
pass/fail.
.SS Default
.IP \[bu] 2
\f[C]"Leaves"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"MLC_leaves"\f[]
.IP \[bu] 2
\f[C]"MLC"\f[]
.IP \[bu] 2
\f[C]"approx_leaf_axes"\f[]
.SS JunctionROILabel
.SS Description
.PP
An ROI imitating the junction is created.
This is the label to apply to it.
Note that the junctions are modeled with thin contour rectangles of
virtually zero area.
.SS Default
.IP \[bu] 2
\f[C]"Junction"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Junction"\f[]
.IP \[bu] 2
\f[C]"Picket_Fence_Junction"\f[]
.SS PeakROILabel
.SS Description
.PP
ROIs encircling the leaf profile peaks are created.
This is the label to apply to it.
Note that the peaks are modeled with small squares.
.SS Default
.IP \[bu] 2
\f[C]"Peak"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Peak"\f[]
.IP \[bu] 2
\f[C]"Picket_Fence_Peak"\f[]
.SS MinimumJunctionSeparation
.SS Description
.PP
The minimum distance between junctions on the SAD isoplane in DICOM
units (mm).
This number is used to de\-duplicate automatically detected junctions.
Analysis results should not be sensitive to the specific value.
.SS Default
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"5.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.IP \[bu] 2
\f[C]"15.0"\f[]
.IP \[bu] 2
\f[C]"25.0"\f[]
.SS ThresholdDistance
.SS Description
.PP
The threshold distance in DICOM units (mm) above which MLC separations
are considered to `fail'.
Each leaf pair is evaluated separately.
Pass/fail status is also indicated by setting the leaf axis contour
colour (blue for pass, red for fail).
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.SS LeafGapsFileName
.SS Description
.PP
This file will contain gap and nominal\-vs\-actual offset distances for
each leaf pair.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS ResultsSummaryFileName
.SS Description
.PP
This file will contain a brief summary of the results.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS InteractivePlots
.SS Description
.PP
Whether to interactively show plots showing detected edges.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ApplyCalibrationCurve
.SS Description
.PP
This operation applies a given calibration curve to voxel data inside
the specified ROI(s).
It is designed to apply calibration curves, but is useful for
transforming voxel intensities using any supplied 1D curve.
.SS Notes
.IP \[bu] 2
This routine can handle overlapping or duplicate contours.
.SS Parameters
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ContourOverlap
.IP \[bu] 2
Inclusivity
.IP \[bu] 2
CalibCurveFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
Use `\-1' to operate on all available channels.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-1"\f[]
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ContourOverlap
.SS Description
.PP
Controls overlapping contours are treated.
The default `ignore' treats overlapping contours as a single contour,
regardless of contour orientation.
The option `honour_opposite_orientations' makes overlapping contours
with opposite orientation cancel.
Otherwise, orientation is ignored.
The latter is useful for Boolean structures where contour orientation is
significant for interior contours (holes).
The option `overlapping_contours_cancel' ignores orientation and cancels
all contour overlap.
.SS Default
.IP \[bu] 2
\f[C]"ignore"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"ignore"\f[]
.IP \[bu] 2
\f[C]"honour_opposite_orientations"\f[]
.IP \[bu] 2
\f[C]"overlapping_contours_cancel"\f[]
.IP \[bu] 2
\f[C]"honour_opps"\f[]
.IP \[bu] 2
\f[C]"overlap_cancel"\f[]
.SS Inclusivity
.SS Description
.PP
Controls how voxels are deemed to be `within' the interior of the
selected ROI(s).
The default `center' considers only the central\-most point of each
voxel.
There are two corner options that correspond to a 2D projection of the
voxel onto the image plane.
The first, `planar_corner_inclusive', considers a voxel interior if ANY
corner is interior.
The second, `planar_corner_exclusive', considers a voxel interior if ALL
(four) corners are interior.
.SS Default
.IP \[bu] 2
\f[C]"center"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"center"\f[]
.IP \[bu] 2
\f[C]"centre"\f[]
.IP \[bu] 2
\f[C]"planar_corner_inclusive"\f[]
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.IP \[bu] 2
\f[C]"planar_corner_exclusive"\f[]
.IP \[bu] 2
\f[C]"planar_exc"\f[]
.SS CalibCurveFileName
.SS Description
.PP
The file from which a calibration curve should be read from.
The format should be line\-based with either 2 or 4 numbers per line.
For 2 numbers: (current pixel value) (new pixel value) and for 4
numbers: (current pixel value) (uncertainty) (new pixel value)
(uncertainty).
Uncertainties refer to the prior number and may be uniformly zero if
unknown.
Lines beginning with `#' are treated as comments and ignored.
The curve is linearly interpolated, and must span the full range of
pixel values.
This is done to avoid extrapolation within the operation since the
correct behaviour will differ depending on the specifics of the
calibration.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/calib.dat"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS AutoCropImages
.SS Description
.PP
This operation crops image slices using image\-specific metadata
embedded within the image.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
DICOMMargin
.IP \[bu] 2
RTIMAGE
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS DICOMMargin
.SS Description
.PP
The amount of margin (in the DICOM coordinate system) to spare from
cropping.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"\-0.5"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.SS RTIMAGE
.SS Description
.PP
If true, attempt to crop the image using information embedded in an
RTIMAGE.
This option cannot be used with the other options.
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS Average
.SS Description
.PP
This operation averages image or dose volumes.
It can average over spatial or temporal dimensions.
However, rather than relying specifically on time for temporal
averaging, any images that have overlapping voxels can be averaged.
.SS Notes
.IP \[bu] 2
This operation is typically used to create an aggregate view of a large
volume of data.
It may also increase SNR and can be used for contouring purposes.
.SS Parameters
.IP \[bu] 2
DoseImageSelection
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
AveragingMethod
.SS DoseImageSelection
.SS Description
.PP
Dose images to operate on.
Either `none', `last', or `all'.
.SS Default
.IP \[bu] 2
\f[C]"none"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS AveragingMethod
.SS Description
.PP
The averaging method to use.
Valid methods are `overlapping\-spatially' and
`overlapping\-temporally'.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"overlapping\-spatially"\f[]
.IP \[bu] 2
\f[C]"overlapping\-temporally"\f[]
.SS BCCAExtractRadiomicFeatures
.SS Description
.PP
This operation extracts radiomic features from an image and one or more
ROIs.
.SS Notes
.IP \[bu] 2
This is a `simplified' version of the full radiomics extract routine
that uses defaults that are expected to be reasonable across a wide
range of scenarios.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
FractionalAreaTolerance
.IP \[bu] 2
SimplificationMethod
.IP \[bu] 2
UserComment
.IP \[bu] 2
FeaturesFileName
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
ScaleFactor
.IP \[bu] 2
ImageFileName
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS FractionalAreaTolerance
.SS Description
.PP
The fraction of area each contour will tolerate during simplified.
This is a measure of how much the contour area can change due to
simplification.
.SS Default
.IP \[bu] 2
\f[C]"0.05"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.001"\f[]
.IP \[bu] 2
\f[C]"0.01"\f[]
.IP \[bu] 2
\f[C]"0.02"\f[]
.IP \[bu] 2
\f[C]"0.05"\f[]
.IP \[bu] 2
\f[C]"0.10"\f[]
.SS SimplificationMethod
.SS Description
.PP
The specific algorithm used to perform contour simplification.
`Vertex removal' is a simple algorithm that removes vertices
one\-by\-one without replacement.
It iteratively ranks vertices and removes the single vertex that has the
least impact on contour area.
It is best suited to removing redundant vertices or whenever new
vertices should not be added.
`Vertex collapse' combines two adjacent vertices into a single vertex at
their midpoint.
It iteratively ranks vertex pairs and removes the single vertex that has
the least total impact on contour area.
Note that small sharp features that alternate inward and outward will
have a small total area cost, so will be pruned early.
Thus this technique acts as a low\-pass filter and will defer
simplification of high\-curvature regions until necessary.
It is more economical compared to vertex removal in that it will usually
simplify contours more for a given tolerance (or, equivalently, can
retain contour fidelity better than vertex removal for the same number
of vertices).
However, vertex collapse performs an averaging that may result in
numerical imprecision.
.SS Default
.IP \[bu] 2
\f[C]"vert\-rem"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"vertex\-collapse"\f[]
.IP \[bu] 2
\f[C]"vertex\-removal"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS FeaturesFileName
.SS Description
.PP
Features will be appended to this file.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ScaleFactor
.SS Description
.PP
This factor is applied to the image width and height to magnify (larger
than 1) or shrink (less than 1) the image.
This factor only affects the output image size.
Note that aspect ratio is retained, but rounding for non\-integer
factors may lead to small (1\-2 pixel) discrepancies.
.SS Default
.IP \[bu] 2
\f[C]"1.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.23"\f[]
.SS ImageFileName
.SS Description
.PP
The file name to use for the image.
If blank, a filename will be generated sequentially.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/an_image.png"\f[]
.IP \[bu] 2
\f[C]"afile.png"\f[]
.SS BoostSerializeDrover
.SS Description
.PP
This operation exports all loaded state to a serialized format that can
be loaded again later.
Is is especially useful for suspending long\-running operations with
intermittant interactive sub\-operations.
.SS Parameters
.IP \[bu] 2
Filename
.SS Filename
.SS Description
.PP
The filename (or full path name) to which the serialized data should be
written.
The file format is gzipped XML, which should be portable across most
CPUs.
.SS Default
.IP \[bu] 2
\f[C]"/tmp/boost_serialized_drover.xml.gz"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/out.xml.gz"\f[]
.IP \[bu] 2
\f[C]"./out.xml.gz"\f[]
.IP \[bu] 2
\f[C]"out.xml.gz"\f[]
.SS BuildLexiconInteractively
.SS Description
.PP
This operation interactively builds a lexicon using the currently loaded
contour labels.
It is useful for constructing a domain\-specific lexicon from a set of
representative data.
.SS Parameters
.IP \[bu] 2
CleanLabels
.IP \[bu] 2
JunkLabel
.IP \[bu] 2
OmitROILabelRegex
.IP \[bu] 2
LexiconSeedFile
.SS CleanLabels
.SS Description
.PP
A listing of the labels of interest.
These will be (some of) the `clean' entries in the finished lexicon.
You should only name ROIs you specifically care about and which have a
single, unambiguous occurence in the data set (e.g., `Left_Parotid' is
good, but `JUNK' and `Parotids' are bad \[en] you won't be able to
select the single `JUNK' label if all you care about are parotids.
.SS Default
.IP \[bu] 2
\f[C]"Body,Brainstem,Chiasm,Cord,Larynx\ Pharynx,Left\ Eye,Left\ Optic\ Nerve,Left\ Parotid,Left\ Submand,Left\ Temp\ Lobe,Oral\ Cavity,Right\ Eye,Right\ Optic\ Nerve,Right\ Parotid,Right\ Submand,Right\ Temp\ Lobe"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Left\ Parotid,Right\ Parotid,Left\ Submand,Right\ Submand"\f[]
.IP \[bu] 2
\f[C]"Left\ Submand,Right\ Submand"\f[]
.SS JunkLabel
.SS Description
.PP
A label to apply to the un\-matched labels.
This helps prevent false positives by excluding names which are close to
a desired clean label.
For example, if you are looking for `Left_Parotid' you will want to mark
`left\-parotid_opti' and `OLDLeftParotid' as junk.
Passing an empty string disables junk labeling.
.SS Default
.IP \[bu] 2
\f[C]"JUNK"\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Junk"\f[]
.IP \[bu] 2
\f[C]"Irrelevant"\f[]
.IP \[bu] 2
\f[C]"NA_Organ"\f[]
.SS OmitROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to prune.
Only matching ROIs will be pruned.
The default will match no ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
(Note: an exclusive approach is taken rather than an inclusive approach
because regex negations are not easily supported in the POSIX syntax.)
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*left.*|.*right.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]".*PTV.*|.*CTV.*|.*GTV.*"\f[]
.SS LexiconSeedFile
.SS Description
.PP
A file containing a `seed' lexicon to use and add to.
This is the lexicon that is being built.
It will be modified.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"./some_lexicon"\f[]
.IP \[bu] 2
\f[C]"/tmp/temp_lexicon"\f[]
.SS CT_Liver_Perfusion
.SS Description
.PP
This operation performed dynamic contrast\-enhanced CT perfusion image
modeling on a time series image volume.
.SS Notes
.IP \[bu] 2
This routine is used for research purposes only.
.SS Parameters
.PP
No registered options.
.SS CT_Liver_Perfusion_First_Run
.SS Description
.PP
This operation performed dynamic contrast\-enhanced CT perfusion image
modeling on a time series image volume.
.SS Notes
.IP \[bu] 2
Use this mode when peeking at the data for the first time.
It avoids computing much, just lets you \f[I]look\f[] at the data, find
t_0, etc..
.SS Parameters
.PP
No registered options.
.SS CT_Liver_Perfusion_Ortho_Views
.SS Description
.PP
This operation performed dynamic contrast\-enhanced CT perfusion image
modeling on a time series image volume.
.SS Notes
.IP \[bu] 2
Use this mode when you are only interested in oblique/orthogonal views.
The point of this operation is to keep memory low so image sets can be
compared.
.SS Parameters
.PP
No registered options.
.SS CT_Liver_Perfusion_Pharmaco_1C2I_5Param
.SS Description
.PP
This operation performed dynamic contrast\-enhanced CT perfusion image
modeling on a time series image volume.
.SS Parameters
.IP \[bu] 2
AIFROINameRegex
.IP \[bu] 2
ExponentialKernelCoeffTruncation
.IP \[bu] 2
FastChebyshevMultiplication
.IP \[bu] 2
PlotAIFVIF
.IP \[bu] 2
PlotPixelModel
.IP \[bu] 2
PreDecimateOutSizeR
.IP \[bu] 2
PreDecimateOutSizeC
.IP \[bu] 2
TargetROINameRegex
.IP \[bu] 2
UseBasisSplineInterpolation
.IP \[bu] 2
BasisSplineCoefficients
.IP \[bu] 2
BasisSplineOrder
.IP \[bu] 2
UseChebyshevPolyMethod
.IP \[bu] 2
ChebyshevPolyCoefficients
.IP \[bu] 2
VIFROINameRegex
.SS AIFROINameRegex
.SS Description
.PP
Regex for the name of the ROI to use as the AIF.
It should generally be a major artery near the trunk or near the tissue
of interest.
.SS Default
.IP \[bu] 2
\f[C]"Abdominal_Aorta"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Abdominal_Aorta"\f[]
.IP \[bu] 2
\f[C]".*Aorta.*"\f[]
.IP \[bu] 2
\f[C]"Major_Artery"\f[]
.SS ExponentialKernelCoeffTruncation
.SS Description
.PP
Control the number of Chebyshev coefficients used to approximate the
exponential kernel.
Usually ~10 will suffice.
~20 is probably overkill, and ~5 is probably too few.
It is probably better to err on the side of caution and enlarge this
number if you're worried about loss of precision \[en] this will slow
the computation somewhat.
(You might be able to offset by retaining fewer coefficients in
Chebyshev multiplication; see `FastChebyshevMultiplication' parameter.)
.SS Default
.IP \[bu] 2
\f[C]"10"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"5"\f[]
.SS FastChebyshevMultiplication
.SS Description
.PP
Control coefficient truncation/pruning to speed up Chebyshev polynomial
multiplication.
(This setting does nothing if the Chebyshev method is not being used.)
The choice of this number depends on how much precision you are willing
to forgo.
It also strongly depends on the number of datum in the AIF, VIF, and the
number of coefficients used to approximate the exponential kernel
(usually ~10 suffices).
Numbers are specified relative to max(N,M), where N and M are the number
of coefficients in the two Chebyshev expansions taking part in the
multiplication.
If too many coefficients are requested (i.e., more than (N+M\-2)) then
the full non\-approximate multiplication is carried out.
.SS Default
.IP \[bu] 2
\f[C]"*10000000.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*2.0"\f[]
.IP \[bu] 2
\f[C]"*1.5"\f[]
.IP \[bu] 2
\f[C]"*1.0"\f[]
.IP \[bu] 2
\f[C]"*0.5"\f[]
.IP \[bu] 2
\f[C]"*0.3"\f[]
.SS PlotAIFVIF
.SS Description
.PP
Control whether the AIF and VIF should be shown prior to modeling.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS PlotPixelModel
.SS Description
.PP
Show a plot of the fitted model for a specified pixel.
Plotting happens immediately after the pixel is processed.
You can supply arbitrary metadata, but must also supply Row and Column
numbers.
Note that numerical comparisons are performed lexically, so you have to
be exact.
Also note the sub\-separation token is a semi\-colon, not a colon.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Row\@12;Column\@4;Description\@.*k1A.*"\f[]
.IP \[bu] 2
\f[C]"Row\@256;Column\@500;SliceLocation\@23;SliceThickness\@0.5"\f[]
.IP \[bu] 2
\f[C]"Row\@256;Column\@500;Some\@thing#Row\@256;Column\@501;Another\@thing"\f[]
.IP \[bu] 2
\f[C]"Row\@0;Column\@5#Row\@4;Column\@5#Row\@8;Column\@5#Row\@12;Column\@5"\f[]
.SS PreDecimateOutSizeR
.SS Description
.PP
The number of pixels along the row unit vector to group into an outgoing
pixel.
This optional step can reduce computation effort by downsampling
(decimating) images before computing fitted parameter maps (but
\f[I]after\f[] computing AIF and VIF time courses).
Must be a multiplicative factor of the incoming image's row count.
No decimation occurs if either this or `PreDecimateOutSizeC' is zero or
negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS PreDecimateOutSizeC
.SS Description
.PP
The number of pixels along the column unit vector to group into an
outgoing pixel.
This optional step can reduce computation effort by downsampling
(decimating) images before computing fitted parameter maps (but
\f[I]after\f[] computing AIF and VIF time courses).
Must be a multiplicative factor of the incoming image's column count.
No decimation occurs if either this or `PreDecimateOutSizeR' is zero or
negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS TargetROINameRegex
.SS Description
.PP
Regex for the name of the ROI to perform modeling within.
The largest contour is usually what you want, but you can also be more
focused.
.SS Default
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Liver_Patches_For_Testing_Smaller"\f[]
.IP \[bu] 2
\f[C]"Liver_Patches_For_Testing"\f[]
.IP \[bu] 2
\f[C]"Suspected_Liver_Rough"\f[]
.IP \[bu] 2
\f[C]"Rough_Body"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]".*something.*\\|.*another.*thing.*"\f[]
.SS UseBasisSplineInterpolation
.SS Description
.PP
Control whether the AIF and VIF should use basis spline interpolation in
conjunction with the Chebyshev polynomial method.
If this option is not set, linear interpolation is used instead.
Linear interpolation may result in a less\-smooth AIF and VIF (and
therefore possibly slower optimizer convergence), but is safer if you
cannot verify the AIF and VIF plots are reasonable.
This option currently produces an effect only if the Chebyshev
polynomial method is being used.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS BasisSplineCoefficients
.SS Description
.PP
Control the number of basis spline coefficients to use, if applicable.
(This setting does nothing when basis splines are not being used.) Valid
options for this setting depend on the amount of data and b\-spline
order.
This number controls the number of coefficients that are fitted (via
least\-squares).
You must verify that overfitting is not happening.
If in doubt, use fewer coefficients.
There are two ways to specify the number: relative and absolute.
Relative means relative to the number of datum.
For example, if the AIF and VIF have ~40 datum then generally `\f[I]0.5'
is safe. ('\f[]0.5' means there are half the number of coefficients as
datum.) Inspect for overfitting and poor fit.
Because this routine happens once and is fast, do not tweak to optimize
for speed; the aim of this method is to produce a smooth and accurate
AIF and VIF.
Because an integer number of coefficients are needed, so rounding is
used.
You can also specify the absolute number of coefficients to use like
`20'.
It often makes more sense to use relative specification.
Be aware that not all inputs can be honoured due to limits on b\-spline
knots and breaks, and may cause unpredictable behaviour or internal
failure.
.SS Default
.IP \[bu] 2
\f[C]"*0.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*0.8"\f[]
.IP \[bu] 2
\f[C]"*0.5"\f[]
.IP \[bu] 2
\f[C]"*0.3"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS BasisSplineOrder
.SS Description
.PP
Control the polynomial order of basis spline interpolation to use, if
applicable.
(This setting does nothing when basis splines are not being used.) This
parameter controls the order of polynomial used for b\-spline
interpolation, and therefore has ramifications for the computability and
numerical stability of AIF and VIF derivatives.
Stick with `4' or `5' if you're unsure.
.SS Default
.IP \[bu] 2
\f[C]"4"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"5"\f[]
.IP \[bu] 2
\f[C]"6"\f[]
.IP \[bu] 2
\f[C]"7"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"9"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.SS UseChebyshevPolyMethod
.SS Description
.PP
Control whether the AIF and VIF should be approximated by Chebyshev
polynomials.
If this option is not set, a inear interpolation approach is used
instead.
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ChebyshevPolyCoefficients
.SS Description
.PP
Control the number of Chebyshev polynomial coefficients to use, if
applicable.
(This setting does nothing when the Chebyshev polynomial method is not
being used.) This number controls the number of coefficients that are
computed.
There are two ways to specify the number: relative and absolute.
Relative means relative to the number of datum.
For example, if the AIF and VIF have ~40 datum then generally `\f[I]2'
is safe. ('\f[]2' means there are 2x the number of coefficients as
datum; usually overkill.) A good middle\-ground is '*1' which is faster
but should produce similar results.
For speed `/2' is even faster, but can produce bad results in some
cases.
Because an integer number of coefficients are needed, rounding is used.
You can also specify the absolute number of coefficients to use like
`20'.
It often makes more sense to use relative specification.
Be aware that not all inputs can be honoured (i.e., too large, too
small, or negative), and may cause unpredictable behaviour or internal
failure.
.SS Default
.IP \[bu] 2
\f[C]"*2.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*10.0"\f[]
.IP \[bu] 2
\f[C]"*5.0"\f[]
.IP \[bu] 2
\f[C]"*2.0"\f[]
.IP \[bu] 2
\f[C]"*1.23"\f[]
.IP \[bu] 2
\f[C]"*1.0"\f[]
.IP \[bu] 2
\f[C]"/1.0"\f[]
.IP \[bu] 2
\f[C]"/2.0"\f[]
.IP \[bu] 2
\f[C]"/3.0"\f[]
.IP \[bu] 2
\f[C]"/5.0"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"50.0"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"10.01"\f[]
.SS VIFROINameRegex
.SS Description
.PP
Regex for the name of the ROI to use as the VIF.
It should generally be a major vein near the trunk or near the tissue of
interest.
.SS Default
.IP \[bu] 2
\f[C]"Hepatic_Portal_Vein"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Hepatic_Portal_Vein"\f[]
.IP \[bu] 2
\f[C]".*Portal.*Vein.*"\f[]
.IP \[bu] 2
\f[C]"Major_Vein"\f[]
.SS CT_Liver_Perfusion_Pharmaco_1C2I_Reduced3Param
.SS Description
.PP
This operation performed dynamic contrast\-enhanced CT perfusion image
modeling on a time series image volume.
.SS Parameters
.IP \[bu] 2
AIFROINameRegex
.IP \[bu] 2
ExponentialKernelCoeffTruncation
.IP \[bu] 2
FastChebyshevMultiplication
.IP \[bu] 2
PlotAIFVIF
.IP \[bu] 2
PlotPixelModel
.IP \[bu] 2
PreDecimateOutSizeR
.IP \[bu] 2
PreDecimateOutSizeC
.IP \[bu] 2
TargetROINameRegex
.IP \[bu] 2
UseBasisSplineInterpolation
.IP \[bu] 2
BasisSplineCoefficients
.IP \[bu] 2
BasisSplineOrder
.IP \[bu] 2
ChebyshevPolyCoefficients
.IP \[bu] 2
VIFROINameRegex
.SS AIFROINameRegex
.SS Description
.PP
Regex for the name of the ROI to use as the AIF.
It should generally be a major artery near the trunk or near the tissue
of interest.
.SS Default
.IP \[bu] 2
\f[C]"Abdominal_Aorta"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Abdominal_Aorta"\f[]
.IP \[bu] 2
\f[C]".*Aorta.*"\f[]
.IP \[bu] 2
\f[C]"Major_Artery"\f[]
.SS ExponentialKernelCoeffTruncation
.SS Description
.PP
Control the number of Chebyshev coefficients used to approximate the
exponential kernel.
Usually ~10 will suffice.
~20 is probably overkill, and ~5 is probably too few.
It is probably better to err on the side of caution and enlarge this
number if you're worried about loss of precision \[en] this will slow
the computation somewhat.
(You might be able to offset by retaining fewer coefficients in
Chebyshev multiplication; see `FastChebyshevMultiplication' parameter.)
.SS Default
.IP \[bu] 2
\f[C]"10"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"5"\f[]
.SS FastChebyshevMultiplication
.SS Description
.PP
Control coefficient truncation/pruning to speed up Chebyshev polynomial
multiplication.
(This setting does nothing if the Chebyshev method is not being used.)
The choice of this number depends on how much precision you are willing
to forgo.
It also strongly depends on the number of datum in the AIF, VIF, and the
number of coefficients used to approximate the exponential kernel
(usually ~10 suffices).
Numbers are specified relative to max(N,M), where N and M are the number
of coefficients in the two Chebyshev expansions taking part in the
multiplication.
If too many coefficients are requested (i.e., more than (N+M\-2)) then
the full non\-approximate multiplication is carried out.
.SS Default
.IP \[bu] 2
\f[C]"*10000000.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*2.0"\f[]
.IP \[bu] 2
\f[C]"*1.5"\f[]
.IP \[bu] 2
\f[C]"*1.0"\f[]
.IP \[bu] 2
\f[C]"*0.5"\f[]
.IP \[bu] 2
\f[C]"*0.3"\f[]
.SS PlotAIFVIF
.SS Description
.PP
Control whether the AIF and VIF should be shown prior to modeling.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS PlotPixelModel
.SS Description
.PP
Show a plot of the fitted model for a specified pixel.
Plotting happens immediately after the pixel is processed.
You can supply arbitrary metadata, but must also supply Row and Column
numbers.
Note that numerical comparisons are performed lexically, so you have to
be exact.
Also note the sub\-separation token is a semi\-colon, not a colon.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Row\@12;Column\@4;Description\@.*k1A.*"\f[]
.IP \[bu] 2
\f[C]"Row\@256;Column\@500;SliceLocation\@23;SliceThickness\@0.5"\f[]
.IP \[bu] 2
\f[C]"Row\@256;Column\@500;Some\@thing#Row\@256;Column\@501;Another\@thing"\f[]
.IP \[bu] 2
\f[C]"Row\@0;Column\@5#Row\@4;Column\@5#Row\@8;Column\@5#Row\@12;Column\@5"\f[]
.SS PreDecimateOutSizeR
.SS Description
.PP
The number of pixels along the row unit vector to group into an outgoing
pixel.
This optional step can reduce computation effort by downsampling
(decimating) images before computing fitted parameter maps (but
\f[I]after\f[] computing AIF and VIF time courses).
Must be a multiplicative factor of the incoming image's row count.
No decimation occurs if either this or `PreDecimateOutSizeC' is zero or
negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS PreDecimateOutSizeC
.SS Description
.PP
The number of pixels along the column unit vector to group into an
outgoing pixel.
This optional step can reduce computation effort by downsampling
(decimating) images before computing fitted parameter maps (but
\f[I]after\f[] computing AIF and VIF time courses).
Must be a multiplicative factor of the incoming image's column count.
No decimation occurs if either this or `PreDecimateOutSizeR' is zero or
negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS TargetROINameRegex
.SS Description
.PP
Regex for the name of the ROI to perform modeling within.
The largest contour is usually what you want, but you can also be more
focused.
.SS Default
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Liver_Patches_For_Testing_Smaller"\f[]
.IP \[bu] 2
\f[C]"Liver_Patches_For_Testing"\f[]
.IP \[bu] 2
\f[C]"Suspected_Liver_Rough"\f[]
.IP \[bu] 2
\f[C]"Rough_Body"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]".*something.*\\|.*another.*thing.*"\f[]
.SS UseBasisSplineInterpolation
.SS Description
.PP
Control whether the AIF and VIF should use basis spline interpolation in
conjunction with the Chebyshev polynomial method.
If this option is not set, linear interpolation is used instead.
Linear interpolation may result in a less\-smooth AIF and VIF (and
therefore possibly slower optimizer convergence), but is safer if you
cannot verify the AIF and VIF plots are reasonable.
This option currently produces an effect only if the Chebyshev
polynomial method is being used.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS BasisSplineCoefficients
.SS Description
.PP
Control the number of basis spline coefficients to use, if applicable.
(This setting does nothing when basis splines are not being used.) Valid
options for this setting depend on the amount of data and b\-spline
order.
This number controls the number of coefficients that are fitted (via
least\-squares).
You must verify that overfitting is not happening.
If in doubt, use fewer coefficients.
There are two ways to specify the number: relative and absolute.
Relative means relative to the number of datum.
For example, if the AIF and VIF have ~40 datum then generally `\f[I]0.5'
is safe. ('\f[]0.5' means there are half the number of coefficients as
datum.) Inspect for overfitting and poor fit.
Because this routine happens once and is fast, do not tweak to optimize
for speed; the aim of this method is to produce a smooth and accurate
AIF and VIF.
Because an integer number of coefficients are needed, so rounding is
used.
You can also specify the absolute number of coefficients to use like
`20'.
It often makes more sense to use relative specification.
Be aware that not all inputs can be honoured due to limits on b\-spline
knots and breaks, and may cause unpredictable behaviour or internal
failure.
.SS Default
.IP \[bu] 2
\f[C]"*0.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*0.8"\f[]
.IP \[bu] 2
\f[C]"*0.5"\f[]
.IP \[bu] 2
\f[C]"*0.3"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS BasisSplineOrder
.SS Description
.PP
Control the polynomial order of basis spline interpolation to use, if
applicable.
(This setting does nothing when basis splines are not being used.) This
parameter controls the order of polynomial used for b\-spline
interpolation, and therefore has ramifications for the computability and
numerical stability of AIF and VIF derivatives.
Stick with `4' or `5' if you're unsure.
.SS Default
.IP \[bu] 2
\f[C]"4"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"5"\f[]
.IP \[bu] 2
\f[C]"6"\f[]
.IP \[bu] 2
\f[C]"7"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"9"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.SS ChebyshevPolyCoefficients
.SS Description
.PP
Control the number of Chebyshev polynomial coefficients to use, if
applicable.
(This setting does nothing when the Chebyshev polynomial method is not
being used.) This number controls the number of coefficients that are
computed.
There are two ways to specify the number: relative and absolute.
Relative means relative to the number of datum.
For example, if the AIF and VIF have ~40 datum then generally `\f[I]2'
is safe. ('\f[]2' means there are 2x the number of coefficients as
datum; usually overkill.) A good middle\-ground is '*1' which is faster
but should produce similar results.
For speed `/2' is even faster, but can produce bad results in some
cases.
Because an integer number of coefficients are needed, rounding is used.
You can also specify the absolute number of coefficients to use like
`20'.
It often makes more sense to use relative specification.
Be aware that not all inputs can be honoured (i.e., too large, too
small, or negative), and may cause unpredictable behaviour or internal
failure.
.SS Default
.IP \[bu] 2
\f[C]"*2.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"*10.0"\f[]
.IP \[bu] 2
\f[C]"*5.0"\f[]
.IP \[bu] 2
\f[C]"*2.0"\f[]
.IP \[bu] 2
\f[C]"*1.23"\f[]
.IP \[bu] 2
\f[C]"*1.0"\f[]
.IP \[bu] 2
\f[C]"/1.0"\f[]
.IP \[bu] 2
\f[C]"/2.0"\f[]
.IP \[bu] 2
\f[C]"/3.0"\f[]
.IP \[bu] 2
\f[C]"/5.0"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"50.0"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"10.01"\f[]
.SS VIFROINameRegex
.SS Description
.PP
Regex for the name of the ROI to use as the VIF.
It should generally be a major vein near the trunk or near the tissue of
interest.
.SS Default
.IP \[bu] 2
\f[C]"Hepatic_Portal_Vein"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Hepatic_Portal_Vein"\f[]
.IP \[bu] 2
\f[C]".*Portal.*Vein.*"\f[]
.IP \[bu] 2
\f[C]"Major_Vein"\f[]
.SS ComparePixels
.SS Description
.PP
This operation compares images on a per\-voxel/per\-pixel basis.
.SS Notes
.IP \[bu] 2
Images are overwritten, but ReferenceImages are not.
Multiple Images may be specified, but only one ReferenceImages may be
specified.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ReferenceImageSelection
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ReferenceImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ContourBasedRayCastDoseAccumulate
.SS Description
.PP
This operation performs ray\-casting to estimate the dose of a surface.
The surface is represented as a set of contours (i.e., an ROI).
.SS Parameters
.IP \[bu] 2
DoseLengthMapFileName
.IP \[bu] 2
LengthMapFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
CylinderRadius
.IP \[bu] 2
RaydL
.IP \[bu] 2
Rows
.IP \[bu] 2
Columns
.SS DoseLengthMapFileName
.SS Description
.PP
A filename (or full path) for the (dose)*(length traveled through the
ROI peel) image map.
The format is TBD.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.img"\f[]
.IP \[bu] 2
\f[C]"derivative_data.img"\f[]
.SS LengthMapFileName
.SS Description
.PP
A filename (or full path) for the (length traveled through the ROI peel)
image map.
The format is TBD.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.img"\f[]
.IP \[bu] 2
\f[C]"derivative_data.img"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS CylinderRadius
.SS Description
.PP
The radius of the cylinder surrounding contour line segments that
defines the `surface'.
Quantity is in the DICOM coordinate system.
.SS Default
.IP \[bu] 2
\f[C]"3.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS RaydL
.SS Description
.PP
The distance to move a ray each iteration.
Should be << img_thickness and << cylinder_radius.
Making too large will invalidate results, causing rays to pass through
the surface without registering any dose accumulation.
Making too small will cause the run\-time to grow and may eventually
lead to truncation or round\-off errors.
Quantity is in the DICOM coordinate system.
.SS Default
.IP \[bu] 2
\f[C]"0.1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"0.05"\f[]
.IP \[bu] 2
\f[C]"0.01"\f[]
.IP \[bu] 2
\f[C]"0.005"\f[]
.SS Rows
.SS Description
.PP
The number of rows in the resulting images.
.SS Default
.IP \[bu] 2
\f[C]"256"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS Columns
.SS Description
.PP
The number of columns in the resulting images.
.SS Default
.IP \[bu] 2
\f[C]"256"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS ContourBooleanOperations
.SS Description
.PP
This routine performs 2D Boolean operations on user\-provided sets of
ROIs.
The ROIs themselves are planar contours embedded in R^3, but the Boolean
operation is performed once for each 2D plane where the selected ROIs
reside.
This routine can only perform Boolean operations on co\-planar contours.
This routine can operate on single contours (rather than ROIs composed
of several contours) by simply presenting this routine with a single
contour to select.
.SS Notes
.IP \[bu] 2
This routine DOES support disconnected ROIs, such as left\- and
right\-parotid contours that have been joined into a single `parotids'
ROI.
.IP \[bu] 2
Many Boolean operations can produce contours with holes.
This operation currently connects the interior and exterior with a seam
so that holes can be represented by a single polygon (rather than a
separate hole polygon).
It \f[I]is\f[] possible to export holes as contours with a negative
orientation, but this was not needed when writing.
.IP \[bu] 2
Only the common metadata between contours is propagated to the product
contours.
.SS Parameters
.IP \[bu] 2
ROILabelRegexA
.IP \[bu] 2
ROILabelRegexB
.IP \[bu] 2
NormalizedROILabelRegexA
.IP \[bu] 2
NormalizedROILabelRegexB
.IP \[bu] 2
Operation
.IP \[bu] 2
OutputROILabel
.SS ROILabelRegexA
.SS Description
.PP
A regex matching ROI labels/names that comprise the set of contour
polygons `A' as in f(A,B) where f is some Boolean operation.
The default with match all available ROIs, which is probably not what
you want.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*[pP]rostate.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ROILabelRegexB
.SS Description
.PP
A regex matching ROI labels/names that comprise the set of contour
polygons `B' as in f(A,B) where f is some Boolean operation.
The default with match all available ROIs, which is probably not what
you want.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS NormalizedROILabelRegexA
.SS Description
.PP
A regex matching ROI labels/names that comprise the set of contour
polygons `A' as in f(A,B) where f is some Boolean operation.
The regex is applied to normalized ROI labels/names, which are
translated using a user\-provided lexicon (i.e., a dictionary that
supports fuzzy matching).
The default with match all available ROIs, which is probably not what
you want.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS NormalizedROILabelRegexB
.SS Description
.PP
A regex matching ROI labels/names that comprise the set of contour
polygons `B' as in f(A,B) where f is some Boolean operation.
The regex is applied to normalized ROI labels/names, which are
translated using a user\-provided lexicon (i.e., a dictionary that
supports fuzzy matching).
The default with match all available ROIs, which is probably not what
you want.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS Operation
.SS Description
.PP
The Boolean operation (e.g., the function `f') to perform on the sets of
contour polygons `A' and `B'.
`Symmetric difference' is also known as `XOR'.
.SS Default
.IP \[bu] 2
\f[C]"join"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"intersection"\f[]
.IP \[bu] 2
\f[C]"join"\f[]
.IP \[bu] 2
\f[C]"difference"\f[]
.IP \[bu] 2
\f[C]"symmetric_difference"\f[]
.SS OutputROILabel
.SS Description
.PP
The label to attach to the ROI contour product of f(A,B).
.SS Default
.IP \[bu] 2
\f[C]"Boolean_result"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"A+B"\f[]
.IP \[bu] 2
\f[C]"A\-B"\f[]
.IP \[bu] 2
\f[C]"AuB"\f[]
.IP \[bu] 2
\f[C]"AnB"\f[]
.IP \[bu] 2
\f[C]"AxB"\f[]
.IP \[bu] 2
\f[C]"A^B"\f[]
.IP \[bu] 2
\f[C]"union"\f[]
.IP \[bu] 2
\f[C]"xor"\f[]
.IP \[bu] 2
\f[C]"combined"\f[]
.IP \[bu] 2
\f[C]"body_without_spinal_cord"\f[]
.SS ContourSimilarity
.SS Description
.PP
This operation estimates the similarity or overlap between two sets of
contours.
The comparison is based on point samples.
It is useful for comparing contouring styles.
.SS Notes
.IP \[bu] 2
This routine requires an image grid, which is used to control the
sampling rate.
.SS Parameters
.PP
No registered options.
.SS ContourViaThreshold
.SS Description
.PP
This operation constructs ROI contours using images and pixel/voxel
value thresholds.
The output is `ephemeral' and is not commited to any database.
.SS Notes
.IP \[bu] 2
This routine expects images to be non\-overlapping.
In other words, if images overlap then the contours generated may also
overlap.
This is probably not what you want (but there is nothing intrinsically
wrong with presenting this routine with multiple images if you
intentionally want overlapping contours).
.IP \[bu] 2
Existing contours are ignored and unaltered.
.IP \[bu] 2
Contour orientation is (likely) not properly handled in this routine, so
`pinches' and holes will produce contours with inconsistent or invalid
topology.
If in doubt, disable merge simplifications and live with the
computational penalty.
.SS Parameters
.IP \[bu] 2
ROILabel
.IP \[bu] 2
Lower
.IP \[bu] 2
Upper
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
SimplifyMergeAdjacent
.SS ROILabel
.SS Description
.PP
A label to attach to the ROI contours.
.SS Default
.IP \[bu] 2
\f[C]"unspecified"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"unspecified"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"air"\f[]
.IP \[bu] 2
\f[C]"bone"\f[]
.IP \[bu] 2
\f[C]"invalid"\f[]
.IP \[bu] 2
\f[C]"above_zero"\f[]
.IP \[bu] 2
\f[C]"below_5.3"\f[]
.SS Lower
.SS Description
.PP
The lower bound (inclusive).
Pixels with values < this number are excluded from the ROI.
If the number is followed by a `%', the bound will be scaled between the
min and max pixel values [0\-100%].
If the number is followed by `tile', the bound will be replaced with the
corresponding percentile [0\-100tile].
Note that upper and lower bounds can be specified separately (e.g.,
lower bound is a percentage, but upper bound is a percentile).
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1E\-99"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"0.2%"\f[]
.IP \[bu] 2
\f[C]"23tile"\f[]
.IP \[bu] 2
\f[C]"23.123\ tile"\f[]
.SS Upper
.SS Description
.PP
The upper bound (inclusive).
Pixels with values > this number are excluded from the ROI.
If the number is followed by a `%', the bound will be scaled between the
min and max pixel values [0\-100%].
If the number is followed by `tile', the bound will be replaced with the
corresponding percentile [0\-100tile].
Note that upper and lower bounds can be specified separately (e.g.,
lower bound is a percentage, but upper bound is a percentile).
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"1E\-99"\f[]
.IP \[bu] 2
\f[C]"2.34"\f[]
.IP \[bu] 2
\f[C]"98.12%"\f[]
.IP \[bu] 2
\f[C]"94tile"\f[]
.IP \[bu] 2
\f[C]"94.123\ tile"\f[]
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
.SS Default
.IP \[bu] 2
\f[C]"0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS SimplifyMergeAdjacent
.SS Description
.PP
Simplify contours by merging adjacent contours.
This reduces the number of contours dramatically, but will cause issues
if there are holes (two contours are generated if there is a single
hole, but most DICOMautomaton code disregards orientation \[en] so the
pixels within the hole will be considered part of the ROI, possibly even
doubly so depending on the algorithm).
Disabling merges is always safe (and is therefore the default) but can
be extremely costly for large images.
Furthermore, if you know the ROI does not have holes (or if you don't
care) then it is safe to enable merges.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ContourVote
.SS Description
.PP
This routine pits contours against one another using various criteria.
A number of `closest' or `best' or `winning' contours are copied into a
new contour collection with the specified ROILabel.
The original ROIs are not altered, even the winning ROIs.
.SS Notes
.IP \[bu] 2
This operation considers individual contours only at the moment.
It could be extended to operate on whole ROIs (i.e.,
contour_collections), or to perform a separate vote within each ROI.
The individual contour approach was taken for relevance in 2D image
(e.g., RTIMAGE) analysis.
.IP \[bu] 2
This operation currently cannot perform voting on multiple criteria.
Several criteria could be specified, but an awkward weighting system
would also be needed.
.SS Parameters
.IP \[bu] 2
WinnerROILabel
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
Area
.IP \[bu] 2
Perimeter
.IP \[bu] 2
CentroidX
.IP \[bu] 2
CentroidY
.IP \[bu] 2
CentroidZ
.IP \[bu] 2
WinnerCount
.SS WinnerROILabel
.SS Description
.PP
The ROI label to attach to the winning contour(s).
All other metadata remains the same.
.SS Default
.IP \[bu] 2
\f[C]"unspecified"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"closest"\f[]
.IP \[bu] 2
\f[C]"best"\f[]
.IP \[bu] 2
\f[C]"winners"\f[]
.IP \[bu] 2
\f[C]"best\-matches"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS Area
.SS Description
.PP
If this option is provided with a valid positive number, the contour(s)
with an area closest to the specified value is/are retained.
Note that the DICOM coordinate space is used.
(Supplying the default, NaN, will disable this option.) Note: if several
criteria are specified, it is not specified in which order they are
considered.
.SS Default
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nan"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"1000"\f[]
.IP \[bu] 2
\f[C]"10.23E8"\f[]
.SS Perimeter
.SS Description
.PP
If this option is provided with a valid positive number, the contour(s)
with a perimeter closest to the specified value is/are retained.
Note that the DICOM coordinate space is used.
(Supplying the default, NaN, will disable this option.) Note: if several
criteria are specified, it is not specified in which order they are
considered.
.SS Default
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nan"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"123.456"\f[]
.IP \[bu] 2
\f[C]"1E6"\f[]
.SS CentroidX
.SS Description
.PP
If this option is provided with a valid positive number, the contour(s)
with a centroid closest to the specified value is/are retained.
Note that the DICOM coordinate space is used.
(Supplying the default, NaN, will disable this option.) Note: if several
criteria are specified, it is not specified in which order they are
considered.
.SS Default
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nan"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"123.456"\f[]
.IP \[bu] 2
\f[C]"\-1E6"\f[]
.SS CentroidY
.SS Description
.PP
If this option is provided with a valid positive number, the contour(s)
with a centroid closest to the specified value is/are retained.
Note that the DICOM coordinate space is used.
(Supplying the default, NaN, will disable this option.) Note: if several
criteria are specified, it is not specified in which order they are
considered.
.SS Default
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nan"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"123.456"\f[]
.IP \[bu] 2
\f[C]"\-1E6"\f[]
.SS CentroidZ
.SS Description
.PP
If this option is provided with a valid positive number, the contour(s)
with a centroid closest to the specified value is/are retained.
Note that the DICOM coordinate space is used.
(Supplying the default, NaN, will disable this option.) Note: if several
criteria are specified, it is not specified in which order they are
considered.
.SS Default
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nan"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"123.456"\f[]
.IP \[bu] 2
\f[C]"\-1E6"\f[]
.SS WinnerCount
.SS Description
.PP
Retain this number of `best' or `winning' contours.
.SS Default
.IP \[bu] 2
\f[C]"1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"10000"\f[]
.SS ContourWholeImages
.SS Description
.PP
This operation constructs contours for an ROI that encompasses the whole
of all specified images.
It is useful for operations that operate on ROIs whenever you want to
compute something over the whole image.
This routine avoids having to manually contour anything.
The output is `ephemeral' and is not commited to any database.
.SS Notes
.IP \[bu] 2
This routine will attempt to avoid repeat contours.
Generated contours are tested for intersection with an image before the
image is processed.
.IP \[bu] 2
Existing contours are ignored and unaltered.
.IP \[bu] 2
Contours are set slightly inside the outer boundary so they can be
easily visualized by overlaying on the image.
All voxel centres will be within the bounds.
.SS Parameters
.IP \[bu] 2
ROILabel
.IP \[bu] 2
ImageSelection
.SS ROILabel
.SS Description
.PP
A label to attach to the ROI contours.
.SS Default
.IP \[bu] 2
\f[C]"everything"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"everything"\f[]
.IP \[bu] 2
\f[C]"whole_images"\f[]
.IP \[bu] 2
\f[C]"unspecified"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ContouringAides
.SS Description
.PP
This operation attempts to prepare an image for easier contouring.
.SS Notes
.IP \[bu] 2
At the moment, only logarithmic scaling is applied.
.SS Parameters
.PP
No registered options.
.SS ConvertDoseToImage
.SS Description
.PP
This operation converts all loaded Dose_Arrays to Image_Arrays.
Neither image contents nor metadata should change, but the intent to
treat as an image or dose matrix will of course change.
A deep copy may be performed.
.SS Parameters
.PP
No registered options.
.SS ConvertImageToDose
.SS Description
.PP
This operation converts all loaded Image_Arrays to Dose_Arrays.
Neither image contents nor metadata should change, but the intent to
treat as an image or dose matrix will of course change.
A deep copy may be performed.
.SS Parameters
.PP
No registered options.
.SS ConvertNaNsToAir
.SS Description
.PP
This operation runs the data through a per\-pixel filter, converting
NaN's to air in Hounsfield units (\-1024).
.SS Parameters
.PP
No registered options.
.SS ConvertNaNsToZeros
.SS Description
.PP
This operation runs the data through a per\-pixel filter, converting
NaN's to zeros.
.SS Parameters
.PP
No registered options.
.SS CopyImages
.SS Description
.PP
This operation deep\-copies the selected image arrays.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS CropImageDoseToROIs
.SS Description
.PP
This operation crops image and/or dose array slices to the specified
ROI(s), with an additional margin.
.SS Parameters
.IP \[bu] 2
DICOMMargin
.IP \[bu] 2
DoseImageSelection
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS DICOMMargin
.SS Description
.PP
The amount of margin (in the DICOM coordinate system) to surround the
ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"0.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"\-0.5"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.SS DoseImageSelection
.SS Description
.PP
Dose images to operate on.
Either `none', `last', or `all'.
.SS Default
.IP \[bu] 2
\f[C]"none"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS CropImages
.SS Description
.PP
This operation crops image slices in either pixel or DICOM coordinate
spaces.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
RowsL
.IP \[bu] 2
RowsH
.IP \[bu] 2
ColumnsL
.IP \[bu] 2
ColumnsH
.IP \[bu] 2
DICOMMargin
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS RowsL
.SS Description
.PP
The number of rows to remove, starting with the first row.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first row can be
either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"0px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS RowsH
.SS Description
.PP
The number of rows to remove, starting with the last row.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first row can be
either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"0px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS ColumnsL
.SS Description
.PP
The number of columns to remove, starting with the first column.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first column can
be either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"0px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS ColumnsH
.SS Description
.PP
The number of columns to remove, starting with the last column.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first column can
be either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"0px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS DICOMMargin
.SS Description
.PP
The amount of margin (in the DICOM coordinate system) to spare from
cropping.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"\-0.5"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.SS CropROIDose
.SS Description
.PP
This operation provides a simplified interface for overriding the dose
outside a ROI.
For example, this operation can be used to modify a base plan by
eliminating dose outside an OAR.
.SS Notes
.IP \[bu] 2
This operation performs the opposite of the `Trim' operation, which
trims the dose inside a ROI.
.IP \[bu] 2
The inclusivity of a dose voxel that straddles the ROI boundary can be
specified in various ways.
Refer to the Inclusivity parameter documentation.
.IP \[bu] 2
By default this operation only overrides dose within a ROI.
The opposite, overriding dose outside of a ROI, can be accomplished
using the expert interface.
.SS Parameters
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ContourOverlap
.IP \[bu] 2
Inclusivity
.IP \[bu] 2
ExteriorVal
.IP \[bu] 2
InteriorVal
.IP \[bu] 2
ExteriorOverwrite
.IP \[bu] 2
InteriorOverwrite
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Filename
.IP \[bu] 2
ParanoiaLevel
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
Use `\-1' to operate on all available channels.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-1"\f[]
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ContourOverlap
.SS Description
.PP
Controls overlapping contours are treated.
The default `ignore' treats overlapping contours as a single contour,
regardless of contour orientation.
The option `honour_opposite_orientations' makes overlapping contours
with opposite orientation cancel.
Otherwise, orientation is ignored.
The latter is useful for Boolean structures where contour orientation is
significant for interior contours (holes).
The option `overlapping_contours_cancel' ignores orientation and cancels
all contour overlap.
.SS Default
.IP \[bu] 2
\f[C]"ignore"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"ignore"\f[]
.IP \[bu] 2
\f[C]"honour_opposite_orientations"\f[]
.IP \[bu] 2
\f[C]"overlapping_contours_cancel"\f[]
.IP \[bu] 2
\f[C]"honour_opps"\f[]
.IP \[bu] 2
\f[C]"overlap_cancel"\f[]
.SS Inclusivity
.SS Description
.PP
Controls how voxels are deemed to be `within' the interior of the
selected ROI(s).
The default `center' considers only the central\-most point of each
voxel.
There are two corner options that correspond to a 2D projection of the
voxel onto the image plane.
The first, `planar_corner_inclusive', considers a voxel interior if ANY
corner is interior.
The second, `planar_corner_exclusive', considers a voxel interior if ALL
(four) corners are interior.
.SS Default
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"center"\f[]
.IP \[bu] 2
\f[C]"centre"\f[]
.IP \[bu] 2
\f[C]"planar_corner_inclusive"\f[]
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.IP \[bu] 2
\f[C]"planar_corner_exclusive"\f[]
.IP \[bu] 2
\f[C]"planar_exc"\f[]
.SS ExteriorVal
.SS Description
.PP
The value to give to voxels outside the specified ROI(s).
Note that this value will be ignored if exterior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS InteriorVal
.SS Description
.PP
The value to give to voxels within the volume of the specified ROI(s).
Note that this value will be ignored if interior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS ExteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels exterior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS InteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels interior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Filename
.SS Description
.PP
The filename (or full path name) to which the DICOM file should be
written.
.SS Default
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.IP \[bu] 2
\f[C]"./RD.dcm"\f[]
.IP \[bu] 2
\f[C]"RD.dcm"\f[]
.SS ParanoiaLevel
.SS Description
.PP
At low paranoia setting, only top\-level UIDs are replaced.
At medium paranoia setting, many UIDs, descriptions, and labels are
replaced, but the PatientID and FrameOfReferenceUID are retained.
The high paranoia setting is the same as the medium setting, but the
PatientID and FrameOfReferenceUID are also replaced.
(Note: this is not a full anonymization.) Use the low setting if you
want to retain linkage to the originating data set.
Use the medium setting if you don't.
Use the high setting if your TPS goes overboard linking data sets by
PatientID and/or FrameOfReferenceUID.
.SS Default
.IP \[bu] 2
\f[C]"medium"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"low"\f[]
.IP \[bu] 2
\f[C]"medium"\f[]
.IP \[bu] 2
\f[C]"high"\f[]
.SS DCEMRI_IAUC
.SS Description
.PP
This operation will compute the Integrated Area Under the Curve (IAUC)
for any images present.
.SS Notes
.IP \[bu] 2
This operation is not optimized in any way and operates on whole images.
It can be fairly slow, especially if the image volume is huge, so it is
best to crop images if possible.
.SS Parameters
.PP
No registered options.
.SS DCEMRI_Nonparametric_CE
.SS Description
.PP
This operation takes a single DCE\-MRI scan (`measurement') and
generates a \[lq]poor\-mans's\[rq] contrast enhancement signal.
This is accomplished by subtracting the pre\-contrast injection images
average (`baseline') from later images (and then possibly/optionally
averaging relative to the baseline).
.SS Notes
.IP \[bu] 2
Only a single image volume is required.
It is expected to have temporal sampling beyond the contrast injection
timepoint (or some default value \[en] currently around ~30s).
The resulting images retain the baseline portion, so you'll need to trim
yourself if needed.
.IP \[bu] 2
Be aware that this method of deriving contrast enhancement is not valid!
It ignores nuances due to differing T1 or T2 values due to the presence
of contrast agent.
It should only be used for exploratory purposes or cases where the
distinction with reality is irrelevant.
.SS Parameters
.PP
No registered options.
.SS DICOMExportImagesAsDose
.SS Description
.PP
This operation exports the last Image_Array to a DICOM dose file.
.SS Notes
.IP \[bu] 2
There are various `paranoia' levels that can be used to partially
anonymize the output.
In particular, most metadata and UIDs are replaced, but the files may
still be recognized by a determined individual by comparing the
coordinate system and pixel values.
Do NOT rely on this routine to fully anonymize the data!
.SS Parameters
.IP \[bu] 2
Filename
.IP \[bu] 2
ParanoiaLevel
.SS Filename
.SS Description
.PP
The filename (or full path name) to which the DICOM file should be
written.
.SS Default
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.IP \[bu] 2
\f[C]"./RD.dcm"\f[]
.IP \[bu] 2
\f[C]"RD.dcm"\f[]
.SS ParanoiaLevel
.SS Description
.PP
At low paranoia setting, only top\-level UIDs are replaced.
At medium paranoia setting, many UIDs, descriptions, and labels are
replaced, but the PatientID and FrameOfReferenceUID are retained.
The high paranoia setting is the same as the medium setting, but the
PatientID and FrameOfReferenceUID are also replaced.
(Note: this is not a full anonymization.) Use the low setting if you
want to retain linkage to the originating data set.
Use the medium setting if you don't.
Use the high setting if your TPS goes overboard linking data sets by
PatientID and/or FrameOfReferenceUID.
.SS Default
.IP \[bu] 2
\f[C]"medium"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"low"\f[]
.IP \[bu] 2
\f[C]"medium"\f[]
.IP \[bu] 2
\f[C]"high"\f[]
.SS DecayDoseOverTimeHalve
.SS Description
.PP
This operation transforms a dose map (assumed to be delivered some
distant time in the past) to simulate `decay' or `evaporation' or
`forgivance' of radiation dose by simply halving the value.
This model is only appropriate at long time\-scales, but there is no
cut\-off or threshold to denote what is sufficiently `long'.
So use at your own risk.
As a rule of thumb, do not use this routine if fewer than 2\-3y have
elapsed.
.SS Notes
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
So if you have a time course it may be more sensible to aggregate images
in some way (e.g., spatial averaging) prior to calling this routine.
.IP \[bu] 2
Since this routine is meant to be applied multiple times in succession
for different ROIs (which possibly overlap), all images are imbued with
a second channel that is treated as a mask.
Mask channels are permanently attached so that multiple passes will not
erroneously decay dose.
If this will be problematic, the extra column should be trimmed
immediately after calling this routine.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS DecayDoseOverTimeJones2014
.SS Description
.PP
This operation transforms a dose map (assumed to be delivered some time
in the past) to `decay' or `evaporate' or `forgive' some of the dose
using the time\-dependent model of Jones and Grant (2014;
doi:10.1016/j.clon.2014.04.027).
This model is specific to reirradiation of central nervous tissues.
See the Jones and Grant paper or `Nasopharyngeal Carcinoma' by Wai Tong
Ng et al.
(2016; doi:10.1007/174_2016_48) for more information.
.SS Notes
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
So if you have a time course it may be more sensible to aggregate images
in some way (e.g., spatial averaging) prior to calling this routine.
.IP \[bu] 2
Since this routine is meant to be applied multiple times in succession
for different ROIs (which possibly overlap), all images are imbued with
a second channel that is treated as a mask.
Mask channels are permanently attached so that multiple passes will not
erroneously decay dose.
If this will be problematic, the extra column should be trimmed
immediately after calling this routine.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Course1NumberOfFractions
.IP \[bu] 2
ToleranceTotalDose
.IP \[bu] 2
ToleranceNumberOfFractions
.IP \[bu] 2
TimeGap
.IP \[bu] 2
AlphaBetaRatio
.IP \[bu] 2
UseMoreConservativeRecovery
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Course1NumberOfFractions
.SS Description
.PP
The number of fractions delivered for the first (i.e., previous) course.
If several apply, you can provide a single effective fractionation
scheme's `n'.
.SS Default
.IP \[bu] 2
\f[C]"35"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"25"\f[]
.IP \[bu] 2
\f[C]"30.001"\f[]
.IP \[bu] 2
\f[C]"35.3"\f[]
.SS ToleranceTotalDose
.SS Description
.PP
The dose delivered (in Gray) for a hypothetical `lifetime dose
tolerance' course.
This dose corresponds to a hypothetical radiation course that nominally
corresponds to the toxicity of interest.
For CNS tissues, it will probably be myelopathy or necrosis at some
population\-level onset risk (e.g., 5% risk of myelopathy).
The value provided will be converted to a BED_{a/b} so you can safely
provide a `nominal' value.
Be aware that each voxel is treated independently, rather than treating
OARs/ROIs as a whole.
(Many dose limits reported in the literature use whole\-ROI D_mean or
D_max, and so may be not be directly applicable to per\-voxel risk
estimation!) Note that the QUANTEC 2010 reports almost all assume 2
Gy/fraction.
If several fractionation schemes were used, you should provide a
cumulative BED\-derived dose here.
.SS Default
.IP \[bu] 2
\f[C]"52"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"25"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"83.2"\f[]
.SS ToleranceNumberOfFractions
.SS Description
.PP
The number of fractions (`n') the `lifetime dose tolerance' toxicity you
are interested in.
Note that this is converted to a BED_{a/b} so you can safely provide a
`nominal' value.
If several apply, you can provide a single effective fractionation
scheme's `n'.
.SS Default
.IP \[bu] 2
\f[C]"35"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"25"\f[]
.IP \[bu] 2
\f[C]"30.001"\f[]
.IP \[bu] 2
\f[C]"35.3"\f[]
.SS TimeGap
.SS Description
.PP
The number of years between radiotherapy courses.
Note that this is normally estimated by (1) extracting study/series
dates from the provided dose files and (2) using the current date as the
second course date.
Use this parameter to override the autodetected gap time.
Note: if the provided value is negative, autodetection will be used.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.91"\f[]
.IP \[bu] 2
\f[C]"2.6"\f[]
.IP \[bu] 2
\f[C]"5"\f[]
.SS AlphaBetaRatio
.SS Description
.PP
The ratio alpha/beta (in Gray) to use when converting to a
biologically\-equivalent dose distribution for central nervous tissues.
Jones and Grant (2014) recommend alpha/beta = 2 Gy to be conservative.
It is more commonplace to use alpha/beta = 3 Gy, but this is less
conservative and there is some evidence that it may be erroneous to use
3 Gy.
.SS Default
.IP \[bu] 2
\f[C]"2"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.SS UseMoreConservativeRecovery
.SS Description
.PP
Jones and Grant (2014) provide two ways to estimate the function `r'.
One is fitted to experimental data, and one is a more conservative
estimate of the fitted function.
This parameter controls whether or not the more conservative function is
used.
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS DecimatePixels
.SS Description
.PP
This operation spatially aggregates blocks of pixels, thereby decimating
them and making the images consume far less memory.
The precise size reduction and spatial aggregate can be set in the
source.
.SS Parameters
.IP \[bu] 2
OutSizeR
.IP \[bu] 2
OutSizeC
.SS OutSizeR
.SS Description
.PP
The number of pixels along the row unit vector to group into an outgoing
pixel.
Must be a multiplicative factor of the incoming image's row count.
No decimation occurs if either this or `OutSizeC' is zero or negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS OutSizeC
.SS Description
.PP
The number of pixels along the column unit vector to group into an
outgoing pixel.
Must be a multiplicative factor of the incoming image's column count.
No decimation occurs if either this or `OutSizeR' is zero or negative.
.SS Default
.IP \[bu] 2
\f[C]"8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.IP \[bu] 2
\f[C]"16"\f[]
.IP \[bu] 2
\f[C]"32"\f[]
.IP \[bu] 2
\f[C]"64"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"256"\f[]
.IP \[bu] 2
\f[C]"512"\f[]
.SS DeleteImages
.SS Description
.PP
This routine deletes images from memory.
It is most useful when working with positional operations in stages.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS DetectShapes3D
.SS Description
.PP
This operation attempts to detect shapes in image volumes.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS DroverDebug
.SS Description
.PP
This operation reports basic information on the state of the main Drover
class.
It can be used to report on the state of the data, which can be useful
for debugging.
.SS Parameters
.PP
No registered options.
.SS DumpAllOrderedImageMetadataToFile
.SS Description
.PP
Dump exactly what order the data will be in for the following analysis.
.SS Parameters
.PP
No registered options.
.SS DumpAnEncompassedPoint
.SS Description
.PP
This operation estimates the number of spatially\-overlapping images.
It finds an arbitrary point within an arbitrary image, and then finds
all other images which encompass the point.
.SS Parameters
.PP
No registered options.
.SS DumpFilesPartitionedByTime
.SS Description
.PP
This operation prints PACS filenames along with the associated time.
It is more focused than the metadata dumpers above.
This data can be used for many things, such as image viewers which are
not DICOM\-aware or deformable registration on time series data.
.SS Parameters
.PP
No registered options.
.SS DumpImageMetadataOccurrencesToFile
.SS Description
.PP
Dump all the metadata elements, but group like\-items together and also
print the occurence number.
.SS Parameters
.PP
No registered options.
.SS DumpPerROIParams_KineticModel_1C2I_5P
.SS Description
.PP
Given a perfusion model, this routine computes parameter estimates for
ROIs.
.SS Parameters
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Filename
.IP \[bu] 2
Separator
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Filename
.SS Description
.PP
A file into which the results should be dumped.
If the filename is empty, the results are dumped to the console only.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/results.txt"\f[]
.IP \[bu] 2
\f[C]"/dev/null"\f[]
.IP \[bu] 2
\f[C]"~/output.txt"\f[]
.SS Separator
.SS Description
.PP
The token(s) to place between adjacent columns of output.
Note: because whitespace is trimmed from user parameters, whitespace
separators other than the default are shortened to an empty string.
So non\-default whitespace are not currently supported.
.SS Default
.IP \[bu] 2
\f[C]"\ "\f[]
.SS Examples
.IP \[bu] 2
\f[C]","\f[]
.IP \[bu] 2
\f[C]";"\f[]
.IP \[bu] 2
\f[C]"_a_long_separator_"\f[]
.SS DumpPixelValuesOverTimeForAnEncompassedPoint
.SS Description
.PP
Output the pixel values over time for a generic point.
Currently the point is arbitrarily taken to tbe the centre of the first
image.
This is useful for quickly and programmatically inspecting trends, but
the SFML_Viewer operation is better for interactive exploration.
.SS Parameters
.PP
No registered options.
.SS DumpROIContours
.SS Description
.PP
This operation exports contours in a standard surface mesh format
(structured ASCII Wavefront OBJ) in planar polygon format.
A companion material library file (MTL) assigns colours to each ROI to
help differentiate them.
.SS Notes
.IP \[bu] 2
Contours that are grouped together into a contour_collection are treated
as a logical within the output.
For example, all contours in a collection will share a common material
property (e.g., colour).
If more fine\-grained grouping is required, this routine can be called
once for each group which will result in a logical grouping of one ROI
per file.
.SS Parameters
.IP \[bu] 2
DumpFileName
.IP \[bu] 2
MTLFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS DumpFileName
.SS Description
.PP
A filename (or full path) in which to (over)write with contour data.
File format is Wavefront obj.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile.obj"\f[]
.IP \[bu] 2
\f[C]"localfile.obj"\f[]
.IP \[bu] 2
\f[C]"derivative_data.obj"\f[]
.SS MTLFileName
.SS Description
.PP
A filename (or full path) in which to (over)write a Wavefront material
library file.
This file is used to colour the contours to help differentiate them.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/materials.mtl"\f[]
.IP \[bu] 2
\f[C]"localfile.mtl"\f[]
.IP \[bu] 2
\f[C]"somefile.mtl"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS DumpROIData
.SS Description
.PP
This operation dumps ROI contour information for debugging and quick
inspection purposes.
.SS Parameters
.PP
No registered options.
.SS DumpROIDoseInfo
.SS Description
.PP
This operation computes mean voxel doses with the given ROIs.
.SS Parameters
.IP \[bu] 2
ROILabelRegex
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses grep syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*parotid.*|.*sub.*mand.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid|eyes"\f[]
.SS DumpROISNR
.SS Description
.PP
This operation computes the Signal\-to\-Noise ratio (SNR) for each ROI.
The specific `SNR' computed is SNR = (mean pixel) / (pixel std dev)
which is the inverse of the coefficient of variation.
.SS Notes
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand if dose
SNR is desired.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
So if you have a time course it may be more sensible to aggregate images
in some way (e.g., spatial averaging) prior to calling this routine.
.SS Parameters
.IP \[bu] 2
SNRFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS SNRFileName
.SS Description
.PP
A filename (or full path) in which to append SNR data generated by this
routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS DumpROISurfaceMeshes
.SS Description
.PP
This operation generates surface meshes from contour volumes.
Output is written to file(s) for viewing with an external viewer (e.g.,
meshlab).
.SS Parameters
.IP \[bu] 2
OutDir
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS OutDir
.SS Description
.PP
The directory in which to dump surface mesh files.
It will be created if it doesn't exist.
.SS Default
.IP \[bu] 2
\f[C]"/tmp/"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"./"\f[]
.IP \[bu] 2
\f[C]"../somedir/"\f[]
.IP \[bu] 2
\f[C]"/path/to/some/destination"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses grep syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*parotid.*|.*sub.*mand.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid|eyes"\f[]
.SS DumpVoxelDoseInfo
.SS Description
.PP
This operation locates the minimum and maximum dose voxel values.
It is useful for estimating prescription doses.
.SS Notes
.IP \[bu] 2
This implementation makes use of an older way of estimating dose.
Please verify it works (or re\-write using the new methods) before using
for anything important.
.SS Parameters
.PP
No registered options.
.SS EQD2Convert
.SS Description
.PP
This operation performs a BED\-based conversion to a dose\-equivalent
that would have 2Gy fractions.
.SS Notes
.IP \[bu] 2
This operation requires NumberOfFractions and cannot use
DosePerFraction.
The reasoning is that the DosePerFraction would need to be specified for
each individual voxel; the prescription DosePerFraction is NOT the same
as voxels outside the PTV.
.SS Parameters
.IP \[bu] 2
DoseImageSelection
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
AlphaBetaRatioNormal
.IP \[bu] 2
AlphaBetaRatioTumour
.IP \[bu] 2
NumberOfFractions
.IP \[bu] 2
PrescriptionDose
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS DoseImageSelection
.SS Description
.PP
Dose images to operate on.
Either `none', `last', or `all'.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS AlphaBetaRatioNormal
.SS Description
.PP
The value to use for alpha/beta in normal (non\-cancerous) tissues.
Generally a value of 3.0 Gy is used.
Tissues that are sensitive to fractionation may warrant smaller ratios,
such as 1.5\-3 Gy for cervical central nervous tissues and 2.3\-4.9 for
lumbar central nervous tissues (consult table 8.1, page 107 in: Joiner
et al., `Fractionation: the linear\-quadratic approach', 4th Ed., 2009,
in the book `Basic Clinical Radiobiology', ISBN: 0340929669).
Note that the selected ROIs denote which tissues are diseased.
The remaining tissues are considered to be normal.
.SS Default
.IP \[bu] 2
\f[C]"3.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"3.0"\f[]
.SS AlphaBetaRatioTumour
.SS Description
.PP
The value to use for alpha/beta in diseased (tumourous) tissues.
Generally a value of 10.0 is used.
Note that the selected ROIs denote which tissues are diseased.
The remaining tissues are considered to be normal.
.SS Default
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS NumberOfFractions
.SS Description
.PP
The number of fractions in which a plan was (or will be) delivered.
Decimal fractions are supported to accommodate previous BED conversions.
.SS Default
.IP \[bu] 2
\f[C]"35"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"20.5"\f[]
.IP \[bu] 2
\f[C]"35"\f[]
.IP \[bu] 2
\f[C]"40.123"\f[]
.SS PrescriptionDose
.SS Description
.PP
The prescription dose that was (or will be) delivered to the PTV.
Note that this is a theoretical dose since the PTV or CTV will only
nominally receive this dose.
Also note that the specified dose need not exist somewhere in the image.
It can be purely theoretical to accommodate previous BED conversions.
.SS Default
.IP \[bu] 2
\f[C]"70"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"15"\f[]
.IP \[bu] 2
\f[C]"22.5"\f[]
.IP \[bu] 2
\f[C]"45.0"\f[]
.IP \[bu] 2
\f[C]"66"\f[]
.IP \[bu] 2
\f[C]"70.001"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider as bounding tumourous
tissues.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*GTV.*"\f[]
.IP \[bu] 2
\f[C]"PTV66"\f[]
.IP \[bu] 2
\f[C]".*PTV.*|.*GTV.**"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider as bounding tumourous
tissues.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*GTV.*"\f[]
.IP \[bu] 2
\f[C]"PTV66"\f[]
.IP \[bu] 2
\f[C]".*PTV.*|.*GTV.**"\f[]
.SS EvaluateDoseVolumeHistograms
.SS Description
.PP
This operation evaluates dose\-volume histograms for the selected
ROI(s).
.SS Notes
.IP \[bu] 2
This routine generates cumulative DVHs with absolute dose on the x\-axis
and fractional volume on the y\-axis.
.IP \[bu] 2
This routine will naively treat voxels of different size with the same
weighting rather than weighting each voxel using its spatial extent.
This is done to improve precision and reduce numerical issues.
If necessary, resample images to have uniform spatial extent.
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
It will not combine separate image_arrays though.
If needed, you'll have to perform a meld on them beforehand.
.SS Parameters
.IP \[bu] 2
OutFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
dDose
.IP \[bu] 2
UserComment
.SS OutFileName
.SS Description
.PP
A filename (or full path) in which to append the histogram data
generated by this routine.
The format is a two\-column data file suitable for plotting.
A short header separates entries.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.dat"\f[]
.IP \[bu] 2
\f[C]"derivative_data.dat"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching the ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching the ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS dDose
.SS Description
.PP
The (fixed) bin width, in units of dose.
.SS Default
.IP \[bu] 2
\f[C]"2.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
If left empty, the column will be omitted from the output.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS EvaluateDoseVolumeStats
.SS Description
.PP
This operation evaluates a variety of Dose\-Volume statistics.
It is geared toward PTV ROIs.
Currently the following are implemented: (1) Dose Homogeneity Index: H =
(D_{2%} \- D_{98%})/D_{median} | over one or more PTVs, where D_{2%} is
the maximum dose that covers 2% of the volume of the PTV, and D_{98%} is
the minimum dose that covers 98% of the volume of the PTV.
(2) Conformity Number: C = V_{T,pres}^{2} / ( V_{T} * V_{pres} ) where
V_{T,pres} is the PTV volume receiving at least 95% of the PTV
prescription dose, V_{T} is the volume of the PTV, and V_{pres} is
volume of all (tissue) voxels receiving at least 95% of the PTV
prescription dose.
.SS Notes
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
It will not combine separate image_arrays though.
If needed, you'll have to perform a meld on them beforehand.
.SS Parameters
.IP \[bu] 2
OutFileName
.IP \[bu] 2
PTVPrescriptionDose
.IP \[bu] 2
PTVNormalizedROILabelRegex
.IP \[bu] 2
PTVROILabelRegex
.IP \[bu] 2
BodyNormalizedROILabelRegex
.IP \[bu] 2
BodyROILabelRegex
.IP \[bu] 2
UserComment
.SS OutFileName
.SS Description
.PP
A filename (or full path) in which to append dose statistic data
generated by this routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS PTVPrescriptionDose
.SS Description
.PP
The dose prescribed to the PTV of interest (in Gy).
.SS Default
.IP \[bu] 2
\f[C]"70"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"66"\f[]
.IP \[bu] 2
\f[C]"70"\f[]
.IP \[bu] 2
\f[C]"82.5"\f[]
.SS PTVNormalizedROILabelRegex
.SS Description
.PP
A regex matching PTV ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS PTVROILabelRegex
.SS Description
.PP
A regex matching PTV ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*PTV.*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS BodyNormalizedROILabelRegex
.SS Description
.PP
A regex matching body ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS BodyROILabelRegex
.SS Description
.PP
A regex matching PTV ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*body.*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
If left empty, the column will be omitted from the output.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS EvaluateNTCPModels
.SS Description
.PP
This operation evaluates a variety of NTCP models for each provided ROI.
The selected ROI should be OARs.
Currently the following are implemented: (1) The LKB model.
(2) The `Fenwick' model for solid tumours (in the lung; for a
whole\-lung OAR).
.SS Notes
.IP \[bu] 2
Generally these models require dose in 2Gy/fractions equivalents
(`EQD2').
You must pre\-convert the data if the RT plan is not already
2Gy/fraction.
There is no easy way to ensure this conversion has taken place or was
unnecessary.
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
So if you have a time course it may be more sensible to aggregate images
in some way (e.g., spatial averaging) prior to calling this routine.
.IP \[bu] 2
The LKB and mEUD both have their own gEUD `alpha' parameter, but they
are not necessarily shared.
Huang et al.\ 2015 (doi:10.1038/srep18010) used alpha=1 for the LKB
model and alpha=5 for the mEUD model.
.SS Parameters
.IP \[bu] 2
NTCPFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
LKB_TD50
.IP \[bu] 2
LKB_M
.IP \[bu] 2
LKB_Alpha
.IP \[bu] 2
UserComment
.SS NTCPFileName
.SS Description
.PP
A filename (or full path) in which to append NTCP data generated by this
routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS LKB_TD50
.SS Description
.PP
The dose (in Gray) needed to deliver to the selected OAR that will
induce the effect in 50% of cases.
.SS Default
.IP \[bu] 2
\f[C]"26.8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"26.8"\f[]
.SS LKB_M
.SS Description
.PP
No description given\&...
.SS Default
.IP \[bu] 2
\f[C]"0.45"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.45"\f[]
.SS LKB_Alpha
.SS Description
.PP
The weighting factor \f[I]α\f[] that controls the relative weighting of
volume and dose in the generalized Equivalent Uniform Dose (gEUD) model.
When \f[I]α\f[] = 1, the gEUD is equivalent to the mean; when
\f[I]α\f[] = 0, the gEUD is equivalent to the geometric mean.
Wu et al.
(doi:10.1016/S0360\-3016(01)02585\-8) claim that for normal tissues,
\f[I]α\f[] can be related to the Lyman\-Kutcher\-Burman (LKB) model
volume parameter `n' via \f[I]α\f[] = 1/\f[I]n\f[].
Sovik et al.
(doi:10.1016/j.ejmp.2007.09.001) found that gEUD is not strongly
impacted by errors in \f[I]α\f[].
Niemierko et al.
(`A generalized concept of equivalent uniform dose. Med Phys 26:1100,
1999) generated maximum likelihood estimates for 'several tumors and
normal structures' which ranged from \-13.1 for local control of
chordoma tumors to +17.7 for perforation of esophagus.
Gay et al.
(doi:10.1016/j.ejmp.2007.07.001) table 2 lists estimates based on the
work of Emami (doi:10.1016/0360\-3016(91)90171\-Y) for normal tissues
ranging from 1\-31.
Brenner et al.
(doi:10.1016/0360\-3016(93)90189\-3) recommend \-7.2 for breast cancer,
\-10 for melanoma, and \-13 for squamous cell carcinomas.
A 2017 presentation by Ontida Apinorasethkul claims the tumour range
spans [\-40:\-1] and the organs at risk range spans [1:40].
AAPM TG report 166 also provides a listing of recommended values,
suggesting \-10 for PTV and GTV, +1 for parotid, 20 for spinal cord, and
8\-16 for rectum, bladder, brainstem, chiasm, eye, and optic nerve.
Burman (1991) and QUANTEC (2010) also provide estimates.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"31"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
If left empty, the column will be omitted from the output.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS EvaluateTCPModels
.SS Description
.PP
This operation evaluates a variety of TCP models for each provided ROI.
The selected ROI should be the GTV (according to the Fenwick model).
Currently the following are implemented: (1) The `Martel' model.
(2) Equivalent Uniform Dose (EUD) TCP.
(3) The `Fenwick' model for solid tumours.
.SS Notes
.IP \[bu] 2
Generally these models require dose in 2Gy/fractions equivalents
(`EQD2').
You must pre\-convert the data if the RT plan is not already
2Gy/fraction.
There is no easy way to ensure this conversion has taken place or was
unnecessary.
.IP \[bu] 2
This routine uses image_arrays so convert dose_arrays beforehand.
.IP \[bu] 2
This routine will combine spatially\-overlapping images by summing voxel
intensities.
So if you have a time course it may be more sensible to aggregate images
in some way (e.g., spatial averaging) prior to calling this routine.
.IP \[bu] 2
The Fenwick and Martel models share the value of D_{50}.
There may be a slight difference in some cases.
Huang et al.\ 2015 (doi:10.1038/srep18010) used both models and used
84.5 Gy for the Martel model while using 84.6 Gy for the Fenwick model.
(The paper also reported using a Fenwick `m' of 0.329 whereas the
original report by Fenwick reported 0.392, so I don't think this should
be taken as strong evidence of the equality of D_{50}.
However, the difference seems relatively insignificant.)
.SS Parameters
.IP \[bu] 2
TCPFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Gamma50
.IP \[bu] 2
Dose50
.IP \[bu] 2
EUD_Gamma50
.IP \[bu] 2
EUD_TCD50
.IP \[bu] 2
EUD_Alpha
.IP \[bu] 2
Fenwick_C
.IP \[bu] 2
Fenwick_M
.IP \[bu] 2
Fenwick_Vref
.IP \[bu] 2
UserComment
.SS TCPFileName
.SS Description
.PP
A filename (or full path) in which to append TCP data generated by this
routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Gamma50
.SS Description
.PP
The unitless `normalized dose\-response gradient' or normalized slope of
the logistic dose\-response model at the half\-maximum point (e.g.,
D_50).
Informally, this parameter controls the steepness of the dose\-response
curve.
(For more specific information, consult a standard reference such as
`Basic Clinical Radiobiology' 4th Edition by Joiner et al., sections
5.3\-5.5.) This parameter is empirically fit and not universal.
Late endpoints for normal tissues have gamma_50 around 2\-6 whereas
gamma_50 nominally varies around 1.5\-2.5 for local control of squamous
cell carcinomas of the head and neck.
.SS Default
.IP \[bu] 2
\f[C]"2.3"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.5"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"2.5"\f[]
.IP \[bu] 2
\f[C]"6"\f[]
.SS Dose50
.SS Description
.PP
The dose (in Gray) needed to achieve 50% probability of local tumour
control according to an empirical logistic dose\-response model (e.g.,
D_50).
Informally, this parameter `shifts' the model along the dose axis.
(For more specific information, consult a standard reference such as
`Basic Clinical Radiobiology' 4th Edition by Joiner et al., sections
5.1\-5.3.) This parameter is empirically fit and not universal.
In `Quantifying the position and steepness of radiation dose\-response
curves' by Bentzen and Tucker in 1994, D_50 of around 60\-65 Gy are
reported for local control of head and neck cancers (pyriform sinus
carcinoma and neck nodes with max diameter <= 3cm).
Martel et al.\ report 84.5 Gy in lung.
.SS Default
.IP \[bu] 2
\f[C]"65"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"37.9"\f[]
.IP \[bu] 2
\f[C]"52"\f[]
.IP \[bu] 2
\f[C]"60"\f[]
.IP \[bu] 2
\f[C]"65"\f[]
.IP \[bu] 2
\f[C]"84.5"\f[]
.SS EUD_Gamma50
.SS Description
.PP
The unitless `normalized dose\-response gradient' or normalized slope of
the gEUD TCP model.
It is defined only for the generalized Equivalent Uniform Dose (gEUD)
model.
This is sometimes referred to as the change in TCP for a unit change in
dose straddled at the TCD_50 dose.
It is a counterpart to the Martel model's `Gamma_50' parameter, but is
not quite the same.
Okunieff et al.
(doi:10.1016/0360\-3016(94)00475\-Z) computed Gamma50 for tumours in
human subjects across multiple institutions; they found a median of 0.8
for gross disease and a median of 1.5 for microscopic disease.
The inter\-quartile range was [0.7:1.8] and [0.7:2.2] respectively.
(Refer to table 3 for site\-specific values.) Additionally, Gay et al.
(doi:10.1016/j.ejmp.2007.07.001) claim that a value of 4.0 for late
effects a value of 2.0 for tumors in `are reasonable initial estimates
in [our] experience.' Their table 2 lists (NTCP) estimates based on the
work of Emami (doi:10.1016/0360\-3016(91)90171\-Y).
.SS Default
.IP \[bu] 2
\f[C]"0.8"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.8"\f[]
.IP \[bu] 2
\f[C]"1.5"\f[]
.SS EUD_TCD50
.SS Description
.PP
The uniform dose (in Gray) needed to deliver to the tumour to achieve
50% probability of local control.
It is defined only for the generalized Equivalent Uniform Dose (gEUD)
model.
It is a counterpart to the Martel model's `Dose_50' parameter, but is
not quite the same (n.b., TCD_50 is a uniform dose whereas D_50 is more
like a per voxel TCP\-weighted mean.) Okunieff et al.
(doi:10.1016/0360\-3016(94)00475\-Z) computed TCD50 for tumours in human
subjects across multiple institutions; they found a median of 51.9 Gy
for gross disease and a median of 37.9 Gy for microscopic disease.
The inter\-quartile range was [38.4:62.8] and [27.0:49.1] respectively.
(Refer to table 3 for site\-specific values.) Gay et al.
(doi:10.1016/j.ejmp.2007.07.001) table 2 lists (NTCP) estimates based on
the work of Emami (doi:10.1016/0360\-3016(91)90171\-Y) ranging from
18\-68 Gy.
.SS Default
.IP \[bu] 2
\f[C]"51.9"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"51.9"\f[]
.IP \[bu] 2
\f[C]"37.9"\f[]
.SS EUD_Alpha
.SS Description
.PP
The weighting factor \f[I]α\f[] that controls the relative weighting of
volume and dose in the generalized Equivalent Uniform Dose (gEUD) model.
When \f[I]α\f[] = 1, the gEUD is equivalent to the mean; when
\f[I]α\f[] = 0, the gEUD is equivalent to the geometric mean.
Wu et al.
(doi:10.1016/S0360\-3016(01)02585\-8) claim that for normal tissues,
\f[I]α\f[] can be related to the Lyman\-Kutcher\-Burman (LKB) model
volume parameter `n' via \f[I]α\f[] = 1/\f[I]n\f[].
Sovik et al.
(doi:10.1016/j.ejmp.2007.09.001) found that gEUD is not strongly
impacted by error in \f[I]α\f[].
Niemierko et al.
(`A generalized concept of equivalent uniform dose. Med Phys 26:1100,
1999) generated maximum likelihood estimates for 'several tumors and
normal structures' which ranged from \-13.1 for local control of
chordoma tumors to +17.7 for perforation of esophagus.
Gay et al.
(doi:10.1016/j.ejmp.2007.07.001) table 2 lists estimates based on the
work of Emami (doi:10.1016/0360\-3016(91)90171\-Y) for normal tissues
ranging from 1\-31.
Brenner et al.
(doi:10.1016/0360\-3016(93)90189\-3) recommend \-7.2 for breast cancer,
\-10 for melanoma, and \-13 for squamous cell carcinomas.
A 2017 presentation by Ontida Apinorasethkul claims the tumour range
spans [\-40:\-1] and the organs at risk range spans [1:40].
AAPM TG report 166 also provides a listing of recommended values,
suggesting \-10 for PTV and GTV, +1 for parotid, 20 for spinal cord, and
8\-16 for rectum, bladder, brainstem, chiasm, eye, and optic nerve.
Burman (1991) and QUANTEC (2010) also provide estimates.
.SS Default
.IP \[bu] 2
\f[C]"\-13.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-40"\f[]
.IP \[bu] 2
\f[C]"\-13.0"\f[]
.IP \[bu] 2
\f[C]"\-10"\f[]
.IP \[bu] 2
\f[C]"\-7.2"\f[]
.IP \[bu] 2
\f[C]"0.3"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"40"\f[]
.SS Fenwick_C
.SS Description
.PP
This parameter describes the degree that superlinear doses are required
to control large tumours.
In other words, as tumour volume grows, a disproportionate amount of
additional dose is required to maintain the same level of control.
The Fenwick model is semi\-empirical, so this number must be fitted or
used from values reported in the literature.
Fenwick et al.\ 2008 (doi:10.1016/j.clon.2008.12.011) provide values:
9.58 for local progression free survival at 30 months for NSCLC tumours
and 5.00 for head\-and\-neck tumours.
.SS Default
.IP \[bu] 2
\f[C]"9.58"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"9.58"\f[]
.IP \[bu] 2
\f[C]"5.00"\f[]
.SS Fenwick_M
.SS Description
.PP
This parameter describes the dose\-response steepness in the Fenwick
model.
Fenwick et al.\ 2008 (doi:10.1016/j.clon.2008.12.011) provide values:
0.392 for local progression free survival at 30 months for NSCLC tumours
and 0.280 for head\-and\-neck tumours.
.SS Default
.IP \[bu] 2
\f[C]"0.392"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.392"\f[]
.IP \[bu] 2
\f[C]"0.280"\f[]
.SS Fenwick_Vref
.SS Description
.PP
This parameter is the volume (in DICOM units; usually mm^3) of a
reference tumour (i.e., GTV; primary tumour and involved nodes) which
the D_{50} are estimated using.
In other words, this is a `nominal' tumour volume.
Fenwick et al.\ 2008 (doi:10.1016/j.clon.2008.12.011) recommend 148'410
mm^3 (i.e., a sphere of diameter 6.6 cm).
However, an appropriate value depends on the nature of the tumour.
.SS Default
.IP \[bu] 2
\f[C]"148410.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"148410.0"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
If left empty, the column will be omitted from the output.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS ExtractRadiomicFeatures
.SS Description
.PP
This operation extracts radiomic features from the selected images.
Features are implemented as per specification in the Image Biomarker
Standardisation Initiative (IBSI) or pyradiomics documentation if the
IBSI specification is unclear or ambiguous.
.SS Notes
.IP \[bu] 2
This routine is meant to be processed by an external analysis.
.IP \[bu] 2
If this routine is slow, simplifying ROI contours may help speed
surface\-mesh\-based feature extraction.
Often removing the highest\-frequency components of the contour will
help, such as edges that conform tightly to individual voxels.
.SS Parameters
.IP \[bu] 2
UserComment
.IP \[bu] 2
FeaturesFileName
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS FeaturesFileName
.SS Description
.PP
Features will be appended to this file.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS FVPicketFence
.SS Description
.PP
This operation performs a picket fence QA test using an RTIMAGE file.
.SS Notes
.IP \[bu] 2
This is a `simplified' version of the full picket fence analysis program
that uses defaults that are expected to be reasonable across a wide
range of scenarios.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
DICOMMargin
.IP \[bu] 2
RTIMAGE
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
RowsL
.IP \[bu] 2
RowsH
.IP \[bu] 2
ColumnsL
.IP \[bu] 2
ColumnsH
.IP \[bu] 2
DICOMMargin
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
MLCModel
.IP \[bu] 2
MLCROILabel
.IP \[bu] 2
JunctionROILabel
.IP \[bu] 2
PeakROILabel
.IP \[bu] 2
MinimumJunctionSeparation
.IP \[bu] 2
ThresholdDistance
.IP \[bu] 2
LeafGapsFileName
.IP \[bu] 2
ResultsSummaryFileName
.IP \[bu] 2
UserComment
.IP \[bu] 2
InteractivePlots
.IP \[bu] 2
ScaleFactor
.IP \[bu] 2
ImageFileName
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS DICOMMargin
.SS Description
.PP
The amount of margin (in the DICOM coordinate system) to spare from
cropping.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"\-0.5"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.SS RTIMAGE
.SS Description
.PP
If true, attempt to crop the image using information embedded in an
RTIMAGE.
This option cannot be used with the other options.
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS RowsL
.SS Description
.PP
The number of rows to remove, starting with the first row.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first row can be
either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"5px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS RowsH
.SS Description
.PP
The number of rows to remove, starting with the last row.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first row can be
either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"5px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS ColumnsL
.SS Description
.PP
The number of columns to remove, starting with the first column.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first column can
be either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"5px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS ColumnsH
.SS Description
.PP
The number of columns to remove, starting with the last column.
Can be absolute (px), percentage (%), or distance in terms of the DICOM
coordinate system.
Note the DICOM coordinate system can be flipped, so the first column can
be either on the top or bottom of the image.
.SS Default
.IP \[bu] 2
\f[C]"5px"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0px"\f[]
.IP \[bu] 2
\f[C]"10px"\f[]
.IP \[bu] 2
\f[C]"100px"\f[]
.IP \[bu] 2
\f[C]"15%"\f[]
.IP \[bu] 2
\f[C]"15.75%"\f[]
.IP \[bu] 2
\f[C]"123.45"\f[]
.SS DICOMMargin
.SS Description
.PP
The amount of margin (in the DICOM coordinate system) to spare from
cropping.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"\-0.5"\f[]
.IP \[bu] 2
\f[C]"20.0"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS MLCModel
.SS Description
.PP
The MLC design geometry to use.
`VarianMillenniumMLC80' has 80 leafs in each bank; leaves are 10mm wide
at isocentre; and the maximum static field size is 40cm x 40cm.
`VarianMillenniumMLC120' has 120 leafs in each bank; the 40 central
leaves are 5mm wide at isocentre; the 20 peripheral leaves are 10mm
wide; and the maximum static field size is 40cm x 40cm.
`VarianHD120' has 120 leafs in each bank; the 32 central leaves are
2.5mm wide at isocentre; the 28 peripheral leaves are 5mm wide; and the
maximum static field size is 40cm x 22cm.
.SS Default
.IP \[bu] 2
\f[C]"VarianMillenniumMLC120"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"VarianMillenniumMLC80"\f[]
.IP \[bu] 2
\f[C]"VarianMillenniumMLC120"\f[]
.IP \[bu] 2
\f[C]"VarianHD120"\f[]
.SS MLCROILabel
.SS Description
.PP
An ROI imitating the MLC axes of leaf pairs is created.
This is the label to apply to it.
Note that the leaves are modeled with thin contour rectangles of
virtually zero area.
Also note that the outline colour is significant and denotes leaf pair
pass/fail.
.SS Default
.IP \[bu] 2
\f[C]"Leaves"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"MLC_leaves"\f[]
.IP \[bu] 2
\f[C]"MLC"\f[]
.IP \[bu] 2
\f[C]"approx_leaf_axes"\f[]
.SS JunctionROILabel
.SS Description
.PP
An ROI imitating the junction is created.
This is the label to apply to it.
Note that the junctions are modeled with thin contour rectangles of
virtually zero area.
.SS Default
.IP \[bu] 2
\f[C]"Junction"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Junction"\f[]
.IP \[bu] 2
\f[C]"Picket_Fence_Junction"\f[]
.SS PeakROILabel
.SS Description
.PP
ROIs encircling the leaf profile peaks are created.
This is the label to apply to it.
Note that the peaks are modeled with small squares.
.SS Default
.IP \[bu] 2
\f[C]"Peak"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Peak"\f[]
.IP \[bu] 2
\f[C]"Picket_Fence_Peak"\f[]
.SS MinimumJunctionSeparation
.SS Description
.PP
The minimum distance between junctions on the SAD isoplane in DICOM
units (mm).
This number is used to de\-duplicate automatically detected junctions.
Analysis results should not be sensitive to the specific value.
.SS Default
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"5.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.IP \[bu] 2
\f[C]"15.0"\f[]
.IP \[bu] 2
\f[C]"25.0"\f[]
.SS ThresholdDistance
.SS Description
.PP
The threshold distance in DICOM units (mm) above which MLC separations
are considered to `fail'.
Each leaf pair is evaluated separately.
Pass/fail status is also indicated by setting the leaf axis contour
colour (blue for pass, red for fail).
.SS Default
.IP \[bu] 2
\f[C]"0.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.SS LeafGapsFileName
.SS Description
.PP
This file will contain gap and nominal\-vs\-actual offset distances for
each leaf pair.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS ResultsSummaryFileName
.SS Description
.PP
This file will contain a brief summary of the results.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS InteractivePlots
.SS Description
.PP
Whether to interactively show plots showing detected edges.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ScaleFactor
.SS Description
.PP
This factor is applied to the image width and height to magnify (larger
than 1) or shrink (less than 1) the image.
This factor only affects the output image size.
Note that aspect ratio is retained, but rounding for non\-integer
factors may lead to small (1\-2 pixel) discrepancies.
.SS Default
.IP \[bu] 2
\f[C]"1.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.23"\f[]
.SS ImageFileName
.SS Description
.PP
The file name to use for the image.
If blank, a filename will be generated sequentially.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/an_image.png"\f[]
.IP \[bu] 2
\f[C]"afile.png"\f[]
.SS GenerateSurfaceMask
.SS Description
.PP
This operation generates a surface image mask, which contains
information about whether each voxel is within, on, or outside the
selected ROI(s).
.SS Parameters
.IP \[bu] 2
BackgroundVal
.IP \[bu] 2
InteriorVal
.IP \[bu] 2
SurfaceVal
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS BackgroundVal
.SS Description
.PP
The value to give to voxels neither inside nor on the surface of the
ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS InteriorVal
.SS Description
.PP
The value to give to voxels within the volume of the ROI(s) but not on
the surface.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS SurfaceVal
.SS Description
.PP
The value to give to voxels on the surface/boundary of ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"2.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS GenerateVirtualDataContourViaThresholdTestV1
.SS Description
.PP
This operation generates data suitable for testing the
ContourViaThreshold operation.
.SS Parameters
.PP
No registered options.
.SS GenerateVirtualDataDoseStairsV1
.SS Description
.PP
This operation generates a dosimetric stairway.
It can be used for testing how dosimetric data is transformed.
.SS Parameters
.PP
No registered options.
.SS GenerateVirtualDataPerfusionV1
.SS Description
.PP
This operation generates data suitable for testing perfusion modeling
operations.
There are no specific checks in this code.
Another operation performs the actual validation.
You might be able to manually verify if the perfusion model admits a
simple solution.
.SS Parameters
.PP
No registered options.
.SS GiveWholeImageArrayABoneWindowLevel
.SS Description
.PP
This operation runs the images in an image array through a uniform
window\-and\-leveler instead of per\-slice window\-and\-level or no
window\-and\-level at all.
Data is modified and no copy is made!
.SS Parameters
.PP
No registered options.
.SS GiveWholeImageArrayAHeadAndNeckWindowLevel
.SS Description
.PP
This operation runs the images in an image array through a uniform
window\-and\-leveler instead of per\-slice window\-and\-level or no
window\-and\-level at all.
Data is modified and no copy is made!
.SS Parameters
.PP
No registered options.
.SS GiveWholeImageArrayAThoraxWindowLevel
.SS Description
.PP
This operation runs the images in an image array through a uniform
window\-and\-leveler instead of per\-slice window\-and\-level or no
window\-and\-level at all.
Data is modified and no copy is made!
.SS Parameters
.PP
No registered options.
.SS GiveWholeImageArrayAnAbdominalWindowLevel
.SS Description
.PP
This operation runs the images in an image array through a uniform
window\-and\-leveler instead of per\-slice window\-and\-level or no
window\-and\-level at all.
Data is modified and no copy is made!
.SS Parameters
.PP
No registered options.
.SS GridBasedRayCastDoseAccumulate
.SS Description
.PP
This operation performs a ray casting to estimate the surface dose of an
ROI.
.SS Parameters
.IP \[bu] 2
DoseMapFileName
.IP \[bu] 2
DoseLengthMapFileName
.IP \[bu] 2
LengthMapFileName
.IP \[bu] 2
NormalizedReferenceROILabelRegex
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ReferenceROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
SmallestFeature
.IP \[bu] 2
RaydL
.IP \[bu] 2
GridRows
.IP \[bu] 2
GridColumns
.IP \[bu] 2
SourceDetectorRows
.IP \[bu] 2
SourceDetectorColumns
.IP \[bu] 2
NumberOfImages
.SS DoseMapFileName
.SS Description
.PP
A filename (or full path) for the dose image map.
Note that this file is approximate, and may not be accurate.
There is more information available when you use the length and
dose*length maps instead.
However, this file is useful for viewing and eyeballing tuning settings.
The format is FITS.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/dose.fits"\f[]
.IP \[bu] 2
\f[C]"localfile.fits"\f[]
.IP \[bu] 2
\f[C]"derivative_data.fits"\f[]
.SS DoseLengthMapFileName
.SS Description
.PP
A filename (or full path) for the (dose)*(length traveled through the
ROI peel) image map.
The format is FITS.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/doselength.fits"\f[]
.IP \[bu] 2
\f[C]"localfile.fits"\f[]
.IP \[bu] 2
\f[C]"derivative_data.fits"\f[]
.SS LengthMapFileName
.SS Description
.PP
A filename (or full path) for the (length traveled through the ROI peel)
image map.
The format is FITS.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/surfacelength.fits"\f[]
.IP \[bu] 2
\f[C]"localfile.fits"\f[]
.IP \[bu] 2
\f[C]"derivative_data.fits"\f[]
.SS NormalizedReferenceROILabelRegex
.SS Description
.PP
A regex matching reference ROI labels/names to consider.
The default will match all available ROIs, which is non\-sensical.
The reference ROI is used to orient the cleaving plane to trim the grid
surface mask.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Prostate.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Kidney"\f[]
.IP \[bu] 2
\f[C]"Gross\ Liver"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ReferenceROILabelRegex
.SS Description
.PP
A regex matching reference ROI labels/names to consider.
The default will match all available ROIs, which is non\-sensical.
The reference ROI is used to orient the cleaving plane to trim the grid
surface mask.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*[pP]rostate.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS SmallestFeature
.SS Description
.PP
A length giving an estimate of the smallest feature you want to resolve.
Quantity is in the DICOM coordinate system.
.SS Default
.IP \[bu] 2
\f[C]"0.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS RaydL
.SS Description
.PP
The distance to move a ray each iteration.
Should be << img_thickness and << cylinder_radius.
Making too large will invalidate results, causing rays to pass through
the surface without registering any dose accumulation.
Making too small will cause the run\-time to grow and may eventually
lead to truncation or round\-off errors.
Quantity is in the DICOM coordinate system.
.SS Default
.IP \[bu] 2
\f[C]"0.1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.1"\f[]
.IP \[bu] 2
\f[C]"0.05"\f[]
.IP \[bu] 2
\f[C]"0.01"\f[]
.IP \[bu] 2
\f[C]"0.005"\f[]
.SS GridRows
.SS Description
.PP
The number of rows in the surface mask grid images.
.SS Default
.IP \[bu] 2
\f[C]"512"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS GridColumns
.SS Description
.PP
The number of columns in the surface mask grid images.
.SS Default
.IP \[bu] 2
\f[C]"512"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS SourceDetectorRows
.SS Description
.PP
The number of rows in the resulting images.
Setting too fine relative to the surface mask grid or dose grid is
futile.
.SS Default
.IP \[bu] 2
\f[C]"1024"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS SourceDetectorColumns
.SS Description
.PP
The number of columns in the resulting images.
Setting too fine relative to the surface mask grid or dose grid is
futile.
.SS Default
.IP \[bu] 2
\f[C]"1024"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.SS NumberOfImages
.SS Description
.PP
The number of images used for grid\-based surface detection.
Leave negative for computation of a reasonable value; set to something
specific to force an override.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-1"\f[]
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"50"\f[]
.IP \[bu] 2
\f[C]"100"\f[]
.SS GroupImages
.SS Description
.PP
This operation will group individual image slices into partitions
(Image_Arrays) based on the values of the specified metadata tags.
DICOMautomaton operations are usually performed on containers rather
than individual images, and grouping can express connections between
images.
For example a group could contain the scans belonging to a whole study,
one of the series in a study, individual image volumes within a single
series (e.g., a 3D volume in a temporal perfusion scan), or individual
slices.
A group could also contain all the slices that intersect a given plane,
or were taken on a specified StationName.
.SS Notes
.IP \[bu] 2
Images are moved, not copied.
.IP \[bu] 2
Image order within a group is retained (i.e., stable grouping), but
groups are appended to the back of the Image_Array list according to the
default sort for the group's key\-value value.
.IP \[bu] 2
Images that do not contain the specified metadata will be grouped into a
special N/A group at the end.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
KeysCommon
.IP \[bu] 2
Enforce
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS KeysCommon
.SS Description
.PP
Image metadata keys to use for exact\-match groupings.
For each group that is produced, every image will share the same
key\-value pair.
This is generally useful for non\-numeric (or integer, date, etc.)
key\-values.
A `;'\-delimited list can be specified to group on multiple criteria
simultaneously.
An empty string disables metadata\-based grouping.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"SeriesNumber"\f[]
.IP \[bu] 2
\f[C]"BodyPartExamined;StudyDate"\f[]
.IP \[bu] 2
\f[C]"SeriesInstanceUID"\f[]
.IP \[bu] 2
\f[C]"StationName"\f[]
.SS Enforce
.SS Description
.PP
Other specialized grouping operations that involve custom logic.
Currently, only `no\-overlap' is available, but it has two variants.
Both partition based on the spatial extent of images; in each
non\-overlapping partition, no two images will spatially overlap.
`No\-overlap\-as\-is' will effectively insert partitions without
altering the order.
A partition is inserted when an image is found to overlap with an image
already within the partition.
For this grouping to be useful, images must be sorted so that partitions
can be inserted without any necessary reordering.
An example of when this grouping is useful is CT shuttling in which the
ordering of images alternate between increasing and decreasing
SliceNumber.
Note that, depending on the ordering, some partitions may therefore be
incomplete.
`No\-overlap\-adjust' will rearrange images so that the first partition
is always complete.
This is achieved by building a queue of spatially\-overlapping images
and greedily stealing one of each kind when constructing partitions.
An example of when this grouping is useful are 4DCTs which have been
acquired for all phases while the couch remains at a single SliceNumber;
the images are ordered on disk in the acquisition order (i.e., alike
SliceNumbers are bunched together) but the logical analysis order is
that each contiguous volume should represent a single phase.
An empty string disables logic\-based grouping.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"no\-overlap\-as\-is"\f[]
.IP \[bu] 2
\f[C]"no\-overlap\-adjust"\f[]
.SS GrowContours
.SS Description
.PP
This routine will grow (or shrink) 2D contours in their plane by the
specified amount.
Growth is accomplish by translating vertices away from the interior by
the specified amount.
The direction is chosen to be the direction opposite of the in\-plane
normal produced by averaging the line segments connecting the contours.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Distance
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Distance
.SS Description
.PP
The distance to translate contour vertices.
(The direction is outward.)
.SS Default
.IP \[bu] 2
\f[C]"0.00354165798657632"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1E\-5"\f[]
.IP \[bu] 2
\f[C]"0.321"\f[]
.IP \[bu] 2
\f[C]"1.1"\f[]
.IP \[bu] 2
\f[C]"15.3"\f[]
.SS HighlightROIs
.SS Description
.PP
This operation overwrites voxel data inside and/or outside of ROI(s) to
`highlight' them.
It can handle overlapping or duplicate contours.
.SS Parameters
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ContourOverlap
.IP \[bu] 2
Inclusivity
.IP \[bu] 2
ExteriorVal
.IP \[bu] 2
InteriorVal
.IP \[bu] 2
ExteriorOverwrite
.IP \[bu] 2
InteriorOverwrite
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
Use `\-1' to operate on all available channels.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-1"\f[]
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ContourOverlap
.SS Description
.PP
Controls overlapping contours are treated.
The default `ignore' treats overlapping contours as a single contour,
regardless of contour orientation.
The option `honour_opposite_orientations' makes overlapping contours
with opposite orientation cancel.
Otherwise, orientation is ignored.
The latter is useful for Boolean structures where contour orientation is
significant for interior contours (holes).
The option `overlapping_contours_cancel' ignores orientation and cancels
all contour overlap.
.SS Default
.IP \[bu] 2
\f[C]"ignore"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"ignore"\f[]
.IP \[bu] 2
\f[C]"honour_opposite_orientations"\f[]
.IP \[bu] 2
\f[C]"overlapping_contours_cancel"\f[]
.IP \[bu] 2
\f[C]"honour_opps"\f[]
.IP \[bu] 2
\f[C]"overlap_cancel"\f[]
.SS Inclusivity
.SS Description
.PP
Controls how voxels are deemed to be `within' the interior of the
selected ROI(s).
The default `center' considers only the central\-most point of each
voxel.
There are two corner options that correspond to a 2D projection of the
voxel onto the image plane.
The first, `planar_corner_inclusive', considers a voxel interior if ANY
corner is interior.
The second, `planar_corner_exclusive', considers a voxel interior if ALL
(four) corners are interior.
.SS Default
.IP \[bu] 2
\f[C]"center"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"center"\f[]
.IP \[bu] 2
\f[C]"centre"\f[]
.IP \[bu] 2
\f[C]"planar_corner_inclusive"\f[]
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.IP \[bu] 2
\f[C]"planar_corner_exclusive"\f[]
.IP \[bu] 2
\f[C]"planar_exc"\f[]
.SS ExteriorVal
.SS Description
.PP
The value to give to voxels outside the specified ROI(s).
Note that this value will be ignored if exterior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS InteriorVal
.SS Description
.PP
The value to give to voxels within the volume of the specified ROI(s).
Note that this value will be ignored if interior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS ExteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels exterior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS InteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels interior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ImageRoutineTests
.SS Description
.PP
This operation performs a series of sub\-operations that are generally
useful when inspecting an image.
.SS Parameters
.PP
No registered options.
.SS LogScale
.SS Description
.PP
This operation log\-scales pixels for all available image arrays.
This functionality is often desired for viewing purposes, to make the
pixel level changes appear more linear.
Be weary of using for anything quantitative!
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS MaxMinPixels
.SS Description
.PP
This operation replaces pixels with the pixel\-wise difference
(max)\-(min).
.SS Parameters
.PP
No registered options.
.SS MeldDose
.SS Description
.PP
This operation melds all available dose image data.
At a high level, dose melding sums overlapping pixel values for
multi\-part dose arrays.
For more information about what this specifically entails, refer to the
appropriate subroutine.
.SS Parameters
.PP
No registered options.
.SS MinkowskiSum3D
.SS Description
.PP
This operation computes a Minkowski sum or symmetric difference of a 3D
surface mesh generated from the selected ROIs with a sphere.
The effect is that a margin is added or subtracted to the ROIs, causing
them to `grow' outward or `shrink' inward.
Exact and inexact routines can be used.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Operation
.IP \[bu] 2
Distance
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses grep syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*parotid.*|.*sub.*mand.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid|eyes"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
Note that the selected images are used to sample the new contours on.
Image planes need not match the original since a full 3D mesh surface is
generated.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Operation
.SS Description
.PP
The specific operation to perform.
Available options are: `dilate_exact_surface', `dilate_exact_vertex',
`dilate_inexact_isotropic', `erode_inexact_isotropic', and
`shell_inexact_isotropic'.
.SS Default
.IP \[bu] 2
\f[C]"dilate_inexact_isotropic"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"dilate_exact_surface"\f[]
.IP \[bu] 2
\f[C]"dilate_exact_vertex"\f[]
.IP \[bu] 2
\f[C]"dilate_inexact_isotropic"\f[]
.IP \[bu] 2
\f[C]"erode_inexact_isotropic"\f[]
.IP \[bu] 2
\f[C]"shell_inexact_isotropic"\f[]
.SS Distance
.SS Description
.PP
For dilation and erosion operations, this parameter controls the
distance the surface should travel.
For shell operations, this parameter controls the resultant thickness of
the shell.
In all cases DICOM units are assumed.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"3.0"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS ModifyContourMetadata
.SS Description
.PP
This operation injects metadata into contours.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
KeyValues
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS KeyValues
.SS Description
.PP
Key\-value pairs in the form of `key1\@value1;key2\@value2' that will be
injected into the selected images.
Existing metadata will be overwritten.
Both keys and values are case\-sensitive.
Note that a semi\-colon separates key\-value pairs, not a colon.
Note that quotation marks are not stripped internally, but may have to
be provided for the shell to properly interpret the argument.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Description\@\[aq]some\ description\[aq]"\f[]
.IP \[bu] 2
\f[C]"\[aq]Description\@some\ description\[aq]"\f[]
.IP \[bu] 2
\f[C]"MinimumSeparation\@1.23"\f[]
.IP \[bu] 2
\f[C]"\[aq]Description\@some\ description;MinimumSeparation\@1.23\[aq]"\f[]
.SS ModifyImageMetadata
.SS Description
.PP
This operation injects metadata into images.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
KeyValues
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS KeyValues
.SS Description
.PP
Key\-value pairs in the form of `key1\@value1;key2\@value2' that will be
injected into the selected images.
Existing metadata will be overwritten.
Both keys and values are case\-sensitive.
Note that a semi\-colon separates key\-value pairs, not a colon.
Note that quotation marks are not stripped internally, but may have to
be provided for the shell to properly interpret the argument.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Description\@\[aq]some\ description\[aq]"\f[]
.IP \[bu] 2
\f[C]"\[aq]Description\@some\ description\[aq]"\f[]
.IP \[bu] 2
\f[C]"MinimumSeparation\@1.23"\f[]
.IP \[bu] 2
\f[C]"\[aq]Description\@some\ description;MinimumSeparation\@1.23\[aq]"\f[]
.SS NegatePixels
.SS Description
.PP
This operation negates pixels for the selected image arrays.
This functionality is often desired for processing MR images.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS OptimizeStaticBeams
.SS Description
.PP
This operation takes dose matrices corresponding to single, static RT
beams and attempts to optimize beam weighting to create an optimal plan
subject to various criteria.
.SS Notes
.IP \[bu] 2
This routine is a simplisitic routine that attempts to estimate the
optimal beam weighting.
It should NOT be used for clinical purposes, except maybe as a secondary
check or a means to guess reasonable beam weights prior to optimization
within the clinical TPS.
.IP \[bu] 2
Because beam weights are (generally) not specified in DICOM RTDOSE
files, the beam weights are assumed to all be 1.0.
If they are not all 1.0, the weights reported here will be relative to
whatever the existing weights are.
.IP \[bu] 2
This operation uses Image_Arrays, so convert from Dose_Arrays if
necessary prior to calling this routine.
This may be fixed in a future release.
Patches are welcome.
.IP \[bu] 2
If no PTV ROI is available, the BODY contour may suffice.
If this is not available, dose outside the body should somehow be set to
zero to avoid confusing D_{max} metrics.
For example, bolus D_{max} can be high, but is ultimately irrelevant.
.IP \[bu] 2
By default, this routine uses all available images.
This may be fixed in a future release.
Patches are welcome.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ResultsSummaryFileName
.IP \[bu] 2
UserComment
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
MaxVoxelSamples
.IP \[bu] 2
NormalizationD
.IP \[bu] 2
NormalizationV
.IP \[bu] 2
RxDose
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ResultsSummaryFileName
.SS Description
.PP
This file will contain a brief summary of the results.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
If an existing file is present, rows will be appended without writing a
header.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS UserComment
.SS Description
.PP
A string that will be inserted into the output file which will simplify
merging output with differing parameters, from different sources, or
using sub\-selections of the data.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"Using\ XYZ"\f[]
.IP \[bu] 2
\f[C]"Patient\ treatment\ plan\ C"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS MaxVoxelSamples
.SS Description
.PP
The maximum number of voxels to randomly sample (deterministically)
within the PTV.
Setting lower will result in faster calculation, but lower precision.
A reasonable setting depends on the size of the target structure; small
targets may suffice with a few hundred voxels, but larger targets
probably require several thousand.
.SS Default
.IP \[bu] 2
\f[C]"1000"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"200"\f[]
.IP \[bu] 2
\f[C]"500"\f[]
.IP \[bu] 2
\f[C]"1000"\f[]
.IP \[bu] 2
\f[C]"2000"\f[]
.IP \[bu] 2
\f[C]"5000"\f[]
.SS NormalizationD
.SS Description
.PP
The isodose value that should envelop a given volume in the PTV ROI.
In other words, this parameter is the `D' parameter in a DVH constraint
of the form
\f[I]V\f[]~\f[I]D\f[]~ ≥ \f[I]V\f[]~\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]~.
It should be given as a fraction within [0:1] relative to the
prescription dose.
For example, 95% isodose should be provided as `0.95'.
.SS Default
.IP \[bu] 2
\f[C]"0.95"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.90"\f[]
.IP \[bu] 2
\f[C]"0.95"\f[]
.IP \[bu] 2
\f[C]"0.98"\f[]
.IP \[bu] 2
\f[C]"0.99"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS NormalizationV
.SS Description
.PP
The minimal fractional volume of ROI that should be enclosed within one
or more surfaces that demarcate the given isodose value.
In other words, this parameter is the `Vmin' parameter in a DVH
constraint of the form
\f[I]V\f[]~\f[I]D\f[]~ ≥ \f[I]V\f[]~\f[I]m\f[]\f[I]i\f[]\f[I]n\f[]~.
It should be given as a fraction within [0:1] relative to the volume of
the ROI (typically discretized to the number of voxels in the ROI).
For example, if Vmin = 99%, provide the value `0.99'.
.SS Default
.IP \[bu] 2
\f[C]"0.99"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.90"\f[]
.IP \[bu] 2
\f[C]"0.95"\f[]
.IP \[bu] 2
\f[C]"0.98"\f[]
.IP \[bu] 2
\f[C]"0.99"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS RxDose
.SS Description
.PP
The dose prescribed to the ROI that will be optimized.
The units depend on the DICOM file, but will likely be Gy.
.SS Default
.IP \[bu] 2
\f[C]"70.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"48.0"\f[]
.IP \[bu] 2
\f[C]"60.0"\f[]
.IP \[bu] 2
\f[C]"63.3"\f[]
.IP \[bu] 2
\f[C]"70.0"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.SS OrderImages
.SS Description
.PP
This operation will order individual image slices within collections
(Image_Arrays) based on the values of the specified metadata tags.
.SS Notes
.IP \[bu] 2
Images are moved, not copied.
.IP \[bu] 2
Image groupings are retained, and the order of groupings is not altered.
.IP \[bu] 2
Images that do not contain the specified metadata will be sorted after
the end.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Key
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Key
.SS Description
.PP
Image metadata key to use for ordering.
Images will be sorted according to the key's value `natural' sorting
order, which compares sub\-strings of numbers and characters separately.
Note this ordering is expected to be stable, but may not always be on
some systems.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"AcquisitionTime"\f[]
.IP \[bu] 2
\f[C]"ContentTime"\f[]
.IP \[bu] 2
\f[C]"SeriesNumber"\f[]
.IP \[bu] 2
\f[C]"SeriesDescription"\f[]
.SS PlotPerROITimeCourses
.SS Description
.PP
Interactively plot time courses for the specified ROI(s).
.SS Parameters
.IP \[bu] 2
ROILabelRegex
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS PreFilterEnormousCTValues
.SS Description
.PP
This operation runs the data through a per\-pixel filter, censoring
pixels which are too high to legitimately show up in a clinical CT.
Censored pixels are set to NaN.
Data is modified and no copy is made!
.SS Parameters
.PP
No registered options.
.SS PresentationImage
.SS Description
.PP
This operation renders an image with any contours in\-place and colour
mapping using an SFML backend.
.SS Notes
.IP \[bu] 2
By default this operation displays the last available image.
This makes it easier to produce a sequence of images by inserting this
operation into a sequence of operations.
.IP \[bu] 2
Iff there are no images available, this operation will silently convert
dose arrays to image arrays.
If there are images to display, dose arrays must be explicitly converted
to be visible.
.SS Parameters
.IP \[bu] 2
ScaleFactor
.IP \[bu] 2
ImageFileName
.SS ScaleFactor
.SS Description
.PP
This factor is applied to the image width and height to magnify (larger
than 1) or shrink (less than 1) the image.
This factor only affects the output image size.
Note that aspect ratio is retained, but rounding for non\-integer
factors may lead to small (1\-2 pixel) discrepancies.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.23"\f[]
.SS ImageFileName
.SS Description
.PP
The file name to use for the image.
If blank, a filename will be generated sequentially.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/an_image.png"\f[]
.IP \[bu] 2
\f[C]"afile.png"\f[]
.SS PruneEmptyImageDoseArrays
.SS Description
.PP
This operation deletes Image_Arrays that do not contain any images.
.SS Parameters
.PP
No registered options.
.SS PurgeContours
.SS Description
.PP
This routine purges contours if they satisfy various criteria.
.SS Notes
.IP \[bu] 2
This operation considers individual contours only at the moment.
It could be extended to operate on whole ROIs (i.e.,
contour_collections), or to perform a separate vote within each ROI.
The individual contour approach was taken since filtering out small
contour `islands' is the primary use\-case.
.SS Parameters
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
Invert
.IP \[bu] 2
AreaAbove
.IP \[bu] 2
AreaBelow
.IP \[bu] 2
PerimeterAbove
.IP \[bu] 2
PerimeterBelow
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS Invert
.SS Description
.PP
If false, matching contours will be purged.
If true, matching contours will be retained and non\-matching contours
will be purged.
Enabling this option is equivalent to a `Keep if and only if' operation.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS AreaAbove
.SS Description
.PP
If this option is provided with a valid positive number, contour(s) with
an area greater than the specified value are purged.
Note that the DICOM coordinate space is used.
(Supplying the default, inf, will disable this option.)
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"inf"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"1000"\f[]
.IP \[bu] 2
\f[C]"10.23E8"\f[]
.SS AreaBelow
.SS Description
.PP
If this option is provided with a valid positive number, contour(s) with
an area less than the specified value are purged.
Note that the DICOM coordinate space is used.
(Supplying the default, \-inf, will disable this option.)
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-inf"\f[]
.IP \[bu] 2
\f[C]"100.0"\f[]
.IP \[bu] 2
\f[C]"1000"\f[]
.IP \[bu] 2
\f[C]"10.23E8"\f[]
.SS PerimeterAbove
.SS Description
.PP
If this option is provided with a valid positive number, contour(s) with
a perimeter greater than the specified value are purged.
Note that the DICOM coordinate space is used.
(Supplying the default, inf, will disable this option.)
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"inf"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.IP \[bu] 2
\f[C]"100"\f[]
.IP \[bu] 2
\f[C]"10.23E4"\f[]
.SS PerimeterBelow
.SS Description
.PP
If this option is provided with a valid positive number, contour(s) with
a perimeter less than the specified value are purged.
Note that the DICOM coordinate space is used.
(Supplying the default, \-inf, will disable this option.)
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-inf"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.IP \[bu] 2
\f[C]"100"\f[]
.IP \[bu] 2
\f[C]"10.23E4"\f[]
.SS RankPixels
.SS Description
.PP
This operation ranks pixels throughout an image array.
.SS Notes
.IP \[bu] 2
This routine operates on all images in an image array, so pixel value
ranks are valid throughout the array.
However, the window and level of each window is separately determined.
You will need to set a uniform window and level manually if desired.
.IP \[bu] 2
This routine operates on all images in an image array.
If images need to be processed individually, arrays will have to be
exploded prior to calling this routine.
Note that if this functionality is required, it can be implemented as an
operation option easily.
Likewise, if multiple image arrays must be considered simultaneously,
they will need to be combined before invoking this operation.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Method
.IP \[bu] 2
LowerThreshold
.IP \[bu] 2
UpperThreshold
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Method
.SS Description
.PP
Pixels participating in the ranking process will have their pixel values
replaced.
They can be replaced with either a rank or the corresponding percentile.
Ranks start at zero and percentiles are centre\-weighted (i.e.,
rank\-averaged).
.SS Default
.IP \[bu] 2
\f[C]"Percentile"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"Rank"\f[]
.IP \[bu] 2
\f[C]"Percentile"\f[]
.SS LowerThreshold
.SS Description
.PP
The (inclusive) threshold above which pixel values must be in order to
participate in the rank.
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-inf"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-900"\f[]
.SS UpperThreshold
.SS Description
.PP
The (inclusive) threshold below which pixel values must be in order to
participate in the rank.
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"inf"\f[]
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"1500"\f[]
.SS SFML_Viewer
.SS Description
.PP
Launch an interactive viewer based on SFML.
Using this viewer, it is possible to contour ROIs, generate plots of
pixel intensity along profiles or through time, inspect and compare
metadata, and various other things.
.SS Notes
.IP \[bu] 2
If there are no images available, this operation will silently convert
dose arrays to image arrays.
If there are images to display, dose arrays must be explicitly converted
to be visible.
.SS Parameters
.IP \[bu] 2
SingleScreenshot
.IP \[bu] 2
SingleScreenshotFileName
.SS SingleScreenshot
.SS Description
.PP
If `true', a single screenshot is taken and then the viewer is exited.
This option works best for quick visual inspections, and should not be
used for later processing or analysis.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS SingleScreenshotFileName
.SS Description
.PP
Iff invoking the `SingleScreenshot' argument, use this string as the
screenshot filename.
If blank, a filename will be generated sequentially.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/a_screenshot.png"\f[]
.IP \[bu] 2
\f[C]"afile.png"\f[]
.SS SeamContours
.SS Description
.PP
This routine converts contours that represent `outer' and `inner' via
contour orientation into contours that are uniformly outer but have a
zero\-area seam connecting the inner and outer portions.
.SS Notes
.IP \[bu] 2
This routine currently operates on all available ROIs.
.IP \[bu] 2
This routine operates on one contour_collection at a time.
It will combine contours that are in the same contour_collection and
overlap, even if they have different ROINames.
Consider making a complementary routine that partitions contours into
ROIs based on ROIName (or other metadata) if more rigorous enforcement
is needed.
.IP \[bu] 2
This routine actually computes the XOR Boolean of contours that overlap.
So if contours partially overlap, this routine will treat the
overlapping parts as if they are holes, and the non\-overlapping parts
as if they represent the ROI.
This behaviour may be surprising in some cases.
.IP \[bu] 2
This routine will also treat overlapping contours with like orientation
as if the smaller contour were a hole of the larger contour.
.IP \[bu] 2
This routine will ignore contour orientation if there is only a single
contour.
More specifically, for a given ROI label, planes with a single contour
will be unaltered.
.IP \[bu] 2
Only the common metadata between outer and inner contours is propagated
to the seamed contours.
.IP \[bu] 2
This routine will NOT combine disconnected contours with a seam.
Disconnected contours will remain disconnected.
.SS Parameters
.PP
No registered options.
.SS SelectSlicesIntersectingROI
.SS Description
.PP
This operation applies a whitelist to the most\-recently loaded images.
Images must `slice' through one of the described ROIs in order to make
the whitelist.
This operation is typically used to reduce long computations by trimming
the field of view of extraneous image slices.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS SimplifyContours
.SS Description
.PP
This operation performs simplification on contours by removing or moving
vertices.
This operation is mostly used to reduce the computational complexity of
other operations.
.SS Notes
.IP \[bu] 2
Contours are currently processed individually, not as a volume.
.IP \[bu] 2
Simplification is generally performed most eagerly on regions with
relatively low curvature.
Regions of high curvature are generally simplified only as necessary.
.SS Parameters
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
FractionalAreaTolerance
.IP \[bu] 2
SimplificationMethod
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS FractionalAreaTolerance
.SS Description
.PP
The fraction of area each contour will tolerate during simplified.
This is a measure of how much the contour area can change due to
simplification.
.SS Default
.IP \[bu] 2
\f[C]"0.01"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.001"\f[]
.IP \[bu] 2
\f[C]"0.01"\f[]
.IP \[bu] 2
\f[C]"0.02"\f[]
.IP \[bu] 2
\f[C]"0.05"\f[]
.IP \[bu] 2
\f[C]"0.10"\f[]
.SS SimplificationMethod
.SS Description
.PP
The specific algorithm used to perform contour simplification.
`Vertex removal' is a simple algorithm that removes vertices
one\-by\-one without replacement.
It iteratively ranks vertices and removes the single vertex that has the
least impact on contour area.
It is best suited to removing redundant vertices or whenever new
vertices should not be added.
`Vertex collapse' combines two adjacent vertices into a single vertex at
their midpoint.
It iteratively ranks vertex pairs and removes the single vertex that has
the least total impact on contour area.
Note that small sharp features that alternate inward and outward will
have a small total area cost, so will be pruned early.
Thus this technique acts as a low\-pass filter and will defer
simplification of high\-curvature regions until necessary.
It is more economical compared to vertex removal in that it will usually
simplify contours more for a given tolerance (or, equivalently, can
retain contour fidelity better than vertex removal for the same number
of vertices).
However, vertex collapse performs an averaging that may result in
numerical imprecision.
.SS Default
.IP \[bu] 2
\f[C]"vert\-collapse"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"vertex\-collapse"\f[]
.IP \[bu] 2
\f[C]"vertex\-removal"\f[]
.SS SpatialBlur
.SS Description
.PP
This operation blurs pixels (within the plane of the image only) using
the specified estimator.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Estimator
.IP \[bu] 2
GaussianOpenSigma
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Estimator
.SS Description
.PP
Controls the (in\-plane) blur estimator to use.
Options are currently: box_3x3, box_5x5, gaussian_3x3, gaussian_5x5, and
gaussian_open.
The latter (gaussian_open) is adaptive and requires a supplementary
parameter that controls the number of adjacent pixels to consider.
The former (`\&...3x3' and `\&...5x5') are `fixed' estimators that use a
convolution kernel with a fixed size (3x3 or 5x5 pixel neighbourhoods).
All estimators operate in `pixel\-space' and are ignorant about the
image spatial extent.
All estimators are normalized, and thus won't significantly affect the
pixel magnitude scale.
.SS Default
.IP \[bu] 2
\f[C]"gaussian_open"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"box_3x3"\f[]
.IP \[bu] 2
\f[C]"box_5x5"\f[]
.IP \[bu] 2
\f[C]"gaussian_3x3"\f[]
.IP \[bu] 2
\f[C]"gaussian_5x5"\f[]
.IP \[bu] 2
\f[C]"gaussian_open"\f[]
.SS GaussianOpenSigma
.SS Description
.PP
Controls the number of neighbours to consider (only) when using the
gaussian_open estimator.
The number of pixels is computed automatically to accommodate the
specified sigma (currently ignored pixels have 3*sigma or less
weighting).
Be aware this operation can take an enormous amount of time, since the
pixel neighbourhoods quickly grow large.
.SS Default
.IP \[bu] 2
\f[C]"1.5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.5"\f[]
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"1.5"\f[]
.IP \[bu] 2
\f[C]"2.5"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS SpatialDerivative
.SS Description
.PP
This operation estimates various partial derivatives (of pixel values)
within an image.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Estimator
.IP \[bu] 2
Method
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Estimator
.SS Description
.PP
Controls the finite\-difference partial derivative order or estimator
used.
All estimators are centred and use mirror boundary conditions.
First\-order estimators include the basic nearest\-neighbour first
derivative, and Roberts' cross, Prewitt, Sobel, Scharr estimators.
`XxY' denotes the size of the convolution kernel (i.e., the number of
adjacent pixels considered).
The only second\-order estimator is the basic nearest\-neighbour second
derivative.
.SS Default
.IP \[bu] 2
\f[C]"Scharr\-3x3"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"Roberts\-cross\-3x3"\f[]
.IP \[bu] 2
\f[C]"Prewitt\-3x3"\f[]
.IP \[bu] 2
\f[C]"Sobel\-3x3"\f[]
.IP \[bu] 2
\f[C]"Sobel\-5x5"\f[]
.IP \[bu] 2
\f[C]"Scharr\-3x3"\f[]
.IP \[bu] 2
\f[C]"Scharr\-5x5"\f[]
.IP \[bu] 2
\f[C]"second"\f[]
.SS Method
.SS Description
.PP
Controls partial derivative method.
First\-order derivatives can be row\- or column\-aligned, Roberts' cross
can be (+row,+col)\-aligned or (\-row,+col)\-aligned.
Second\-order derivatives can be row\-aligned, column\-aligned, or
`cross' \[en]meaning the compound partial derivative.
All methods support non\-maximum\-suppression for edge thinning, but
currently only the magnitude is output.
All methods support magnitude (addition of orthogonal components in
quadrature) and orientation (in radians; [0,2pi) ).
.SS Default
.IP \[bu] 2
\f[C]"magnitude"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"row\-aligned"\f[]
.IP \[bu] 2
\f[C]"column\-aligned"\f[]
.IP \[bu] 2
\f[C]"prow\-pcol\-aligned"\f[]
.IP \[bu] 2
\f[C]"nrow\-pcol\-aligned"\f[]
.IP \[bu] 2
\f[C]"magnitude"\f[]
.IP \[bu] 2
\f[C]"orientation"\f[]
.IP \[bu] 2
\f[C]"non\-maximum\-suppression"\f[]
.IP \[bu] 2
\f[C]"cross"\f[]
.SS SpatialSharpen
.SS Description
.PP
This operation `sharpens' pixels (within the plane of the image only)
using the specified estimator.
.SS Parameters
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
Estimator
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS Estimator
.SS Description
.PP
Controls the (in\-plane) sharpening estimator to use.
Options are currently: sharpen_3x3 and unsharp_mask_5x5.
The latter is based on a 5x5 Gaussian blur estimator.
.SS Default
.IP \[bu] 2
\f[C]"unsharp_mask_5x5"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"sharpen_3x3"\f[]
.IP \[bu] 2
\f[C]"unsharp_mask_5x5"\f[]
.SS Subsegment_ComputeDose_VanLuijk
.SS Description
.PP
This operation sub\-segments the selected ROI(s) and computes dose
within the resulting sub\-segments.
.SS Parameters
.IP \[bu] 2
AreaDataFileName
.IP \[bu] 2
DerivativeDataFileName
.IP \[bu] 2
DistributionDataFileName
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
PlanarOrientation
.IP \[bu] 2
ReplaceAllWithSubsegment
.IP \[bu] 2
RetainSubsegment
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
SubsegMethod
.IP \[bu] 2
XSelection
.IP \[bu] 2
YSelection
.IP \[bu] 2
ZSelection
.IP \[bu] 2
FractionalTolerance
.IP \[bu] 2
MaxBisects
.SS AreaDataFileName
.SS Description
.PP
A filename (or full path) in which to append sub\-segment areaa data
generated by this routine.
The format is CSV.
Note that if a sub\-segment has zero area or does not exist, no area
will be printed.
You'll have to manually add sub\-segments with zero area as needed if
this info is relevant to you (e.g., if you are deriving a population
average).
Leave empty to NOT dump anything.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"area_data.csv"\f[]
.SS DerivativeDataFileName
.SS Description
.PP
A filename (or full path) in which to append derivative data generated
by this routine.
The format is CSV.
Leave empty to dump to generate a unique temporary file.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"derivative_data.csv"\f[]
.SS DistributionDataFileName
.SS Description
.PP
A filename (or full path) in which to append raw distribution data
generated by this routine.
The format is one line of description followed by one line for the
distribution; pixel intensities are listed with a single space between
elements; the descriptions contain the patient ID, ROIName, and
subsegment description (guaranteed) and possibly various other data
afterward.
Leave empty to NOT dump anything.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/somefile"\f[]
.IP \[bu] 2
\f[C]"localfile.csv"\f[]
.IP \[bu] 2
\f[C]"distributions.data"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS PlanarOrientation
.SS Description
.PP
A string instructing how to orient the cleaving planes.
Currently only `AxisAligned' (i.e., align with the image/dose grid row
and column unit vectors) and `StaticOblique' (i.e., same as AxisAligned
but rotated 22.5 degrees to reduce colinearity, which sometimes improves
sub\-segment area consistency).
.SS Default
.IP \[bu] 2
\f[C]"AxisAligned"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"AxisAligned"\f[]
.IP \[bu] 2
\f[C]"StaticOblique"\f[]
.SS ReplaceAllWithSubsegment
.SS Description
.PP
Keep the sub\-segment and remove any existing contours from the original
ROIs.
This is most useful for further processing, such as nested
sub\-segmentation.
Note that sub\-segment contours currently have identical metadata to
their parent contours.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS RetainSubsegment
.SS Description
.PP
Keep the sub\-segment as part of the original ROIs.
The contours are appended to the original ROIs, but the contour ROIName
and NormalizedROIName are set to the argument provided.
(If no argument is provided, sub\-segments are not retained.) This is
most useful for inspection of sub\-segments.
Note that sub\-segment contours currently have identical metadata to
their parent contours, except they are renamed accordingly.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]"subsegment_01"\f[]
.IP \[bu] 2
\f[C]"subsegment_02"\f[]
.IP \[bu] 2
\f[C]"selected_subsegment"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS SubsegMethod
.SS Description
.PP
The method to use for sub\-segmentation.
Nested sub\-segmentation should almost always be preferred unless you
know what you're doing.
It should be faster too.
The compound method was used in the van Luijk paper, but it is known to
have serious problems.
.SS Default
.IP \[bu] 2
\f[C]"nested"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"nested"\f[]
.IP \[bu] 2
\f[C]"compound"\f[]
.SS XSelection
.SS Description
.PP
(See ZSelection description.) The \[lq]X\[rq] direction is defined in
terms of movement on an image when the row number increases.
This is generally VERTICAL and DOWNWARD.
All selections are defined in terms of the original ROIs.
.SS Default
.IP \[bu] 2
\f[C]"1.0;0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.50;0.50"\f[]
.IP \[bu] 2
\f[C]"0.50;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.70"\f[]
.SS YSelection
.SS Description
.PP
(See ZSelection description.) The \[lq]Y\[rq] direction is defined in
terms of movement on an image when the column number increases.
This is generally HORIZONTAL and RIGHTWARD.
All selections are defined in terms of the original ROIs.
.SS Default
.IP \[bu] 2
\f[C]"1.0;0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.50;0.50"\f[]
.IP \[bu] 2
\f[C]"0.50;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.70"\f[]
.SS ZSelection
.SS Description
.PP
The thickness and offset defining the single, continuous extent of the
sub\-segmentation in terms of the fractional area remaining above a
plane.
The planes define the portion extracted and are determined such that
sub\-segmentation will give the desired fractional planar areas.
The numbers specify the thickness and offset from the bottom of the ROI
volume to the bottom of the extent.
The `upper' direction is take from the contour plane orientation and
assumed to be positive if pointing toward the positive\-z direction.
Only a single 3D selection can be made per operation invocation.
Sub\-segmentation can be performed in transverse (\[lq]Z\[rq]), row_unit
(\[lq]X\[rq]), and column_unit (\[lq]Y\[rq]) directions (in that order).
All selections are defined in terms of the original ROIs.
Note that it is possible to perform nested sub\-segmentation (including
passing along the original contours) by opting to replace the original
ROI contours with this sub\-segmentation and invoking this operation
again with the desired sub\-segmentation.
If you want the middle 50% of an ROI, specify `0.50;0.25'.
If you want the upper 50% then specify `0.50;0.50'.
If you want the lower 50% then specify `0.50;0.0'.
If you want the upper 30% then specify `0.30;0.70'.
If you want the lower 30% then specify `0.30;0.70'.
.SS Default
.IP \[bu] 2
\f[C]"1.0;0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.50;0.50"\f[]
.IP \[bu] 2
\f[C]"0.50;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.0"\f[]
.IP \[bu] 2
\f[C]"0.30;0.70"\f[]
.SS FractionalTolerance
.SS Description
.PP
The tolerance of X, Y, and Z fractional area bisection criteria (see
ZSelection description).
This parameter specifies a stopping condition for the bisection
procedure.
If it is set too high, sub\-segments may be inadequatly rough.
If it is set too low, bisection below the machine precision floor may be
attempted, which will result in instabilities.
Note that the number of permitted iterations will control whether this
tolerance can possibly be reached; if strict adherence is required, set
the maximum number of iterations to be excessively large.
.SS Default
.IP \[bu] 2
\f[C]"0.001"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1E\-2"\f[]
.IP \[bu] 2
\f[C]"1E\-3"\f[]
.IP \[bu] 2
\f[C]"1E\-4"\f[]
.IP \[bu] 2
\f[C]"1E\-5"\f[]
.SS MaxBisects
.SS Description
.PP
The maximum number of iterations the bisection procedure can perform.
This parameter specifies a stopping condition for the bisection
procedure.
If it is set too low, sub\-segments may be inadequatly rough.
If it is set too high, bisection below the machine precision floor may
be attempted, which will result in instabilities.
Note that the fractional tolerance will control whether this tolerance
can possibly be reached; if an exact number of iterations is required,
set the fractional tolerance to be excessively small.
.SS Default
.IP \[bu] 2
\f[C]"20"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"10"\f[]
.IP \[bu] 2
\f[C]"20"\f[]
.IP \[bu] 2
\f[C]"30"\f[]
.SS SubtractImages
.SS Description
.PP
This routine subtracts images that spatially overlap.
.SS Notes
.IP \[bu] 2
This operation currently performs a subtraction necessarily using the
first image volume.
.IP \[bu] 2
This operation is currently extremely limited in that the selected
images must be selected by position.
A more flexible approach will be eventually be implemented when the
image selection mechanism is overhauled.
.SS Parameters
.IP \[bu] 2
ImageSelection
.SS ImageSelection
.SS Description
.PP
Images to operate on.
Either `none', `last', `first', or `all'.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.SS SupersampleImageGrid
.SS Description
.PP
This operation scales supersamples images so they have more rows and/or
columns, but the whole image keeps its shape and spatial extent.
This operation is typically used for zooming into images or trying to
ensure a sufficient number of voxels are within small contours.
.SS Notes
.IP \[bu] 2
Be aware that specifying large multipliers (or even small multipliers on
large images) will consume much memory.
It is best to pre\-crop images to a region of interest if possible.
.SS Parameters
.IP \[bu] 2
ColumnScaleFactor
.IP \[bu] 2
DoseImageSelection
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
RowScaleFactor
.IP \[bu] 2
SamplingMethod
.SS ColumnScaleFactor
.SS Description
.PP
A positive integer specifying how many columns will be in the new
images.
The number is relative to the incoming image column count.
Specifying `1' will result in nothing happening.
Specifying `8' will result in 8x as many columns.
.SS Default
.IP \[bu] 2
\f[C]"2"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.SS DoseImageSelection
.SS Description
.PP
Dose images to operate on.
Either `none', `last', or `all'.
.SS Default
.IP \[bu] 2
\f[C]"none"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS RowScaleFactor
.SS Description
.PP
A positive integer specifying how many rows will be in the new images.
The number is relative to the incoming image row count.
Specifying `1' will result in nothing happening.
Specifying `8' will result in 8x as many rows.
.SS Default
.IP \[bu] 2
\f[C]"2"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.IP \[bu] 2
\f[C]"8"\f[]
.SS SamplingMethod
.SS Description
.PP
The supersampling method to use.
Note: `inplane\-' methods only consider neighbours in the plane of a
single image \[en] neighbours in adjacent images are not considered.
.SS Default
.IP \[bu] 2
\f[C]"inplane\-bicubic"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"inplane\-bicubic"\f[]
.IP \[bu] 2
\f[C]"inplane\-bilinear"\f[]
.SS SurfaceBasedRayCastDoseAccumulate
.SS Description
.PP
This routine uses rays (actually: line segments) to estimate point\-dose
on the surface of an ROI.
The ROI is approximated by surface mesh and rays are passed through.
Dose is interpolated at the intersection points and intersecting lines
(i.e., where the ray `glances' the surface) are discarded.
The surface reconstruction can be tweaked, but appear to reasonably
approximate the ROI contours; both can be output to compare visually.
Though it is not required by the implementation, only the ray\-surface
intersection nearest to the detector is considered.
All other intersections (i.e., on the far side of the surface mesh) are
ignored.
This routine is fairly fast compared to the slow grid\-based counterpart
previously implemented.
The speedup comes from use of an AABB\-tree to accelerate intersection
queries and avoid having to `walk' rays step\-by\-step through
over/through the geometry.
.SS Parameters
.IP \[bu] 2
TotalDoseMapFileName
.IP \[bu] 2
IntersectionCountMapFileName
.IP \[bu] 2
DepthMapFileName
.IP \[bu] 2
RadialDistMapFileName
.IP \[bu] 2
ROISurfaceMeshFileName
.IP \[bu] 2
SubdividedROISurfaceMeshFileName
.IP \[bu] 2
ROICOMCOMLineFileName
.IP \[bu] 2
NormalizedReferenceROILabelRegex
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ReferenceROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
SourceDetectorRows
.IP \[bu] 2
SourceDetectorColumns
.IP \[bu] 2
MeshingAngularBound
.IP \[bu] 2
MeshingFacetSphereRadiusBound
.IP \[bu] 2
MeshingCentreCentreBound
.IP \[bu] 2
MeshingSubdivisionIterations
.IP \[bu] 2
MaxRaySurfaceIntersections
.IP \[bu] 2
OnlyGenerateSurface
.SS TotalDoseMapFileName
.SS Description
.PP
A filename (or full path) for the total dose image map (at all
ray\-surface intersection points).
The dose for each ray is summed over all ray\-surface point
intersections.
The format is FITS.
This file is always generated.
Leave the argument empty to generate a unique filename.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"total_dose_map.fits"\f[]
.IP \[bu] 2
\f[C]"/tmp/out.fits"\f[]
.SS IntersectionCountMapFileName
.SS Description
.PP
A filename (or full path) for the (number of ray\-surface intersections)
image map.
Each pixel in this map (and the total dose map) represents a single ray;
the number of times the ray intersects the surface can be useful for
various purposes, but most often it will simply be a sanity check for
the cross\-sectional shape or that a specific number of intersections
were recorded in regions with geometrical folds.
Pixels will all be within [0,MaxRaySurfaceIntersections].
The format is FITS.
Leave empty to dump to generate a unique filename.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"intersection_count_map.fits"\f[]
.IP \[bu] 2
\f[C]"/tmp/out.fits"\f[]
.SS DepthMapFileName
.SS Description
.PP
A filename (or full path) for the distance (depth) of each ray\-surface
intersection point from the detector.
Has DICOM coordinate system units.
This image is potentially multi\-channel with MaxRaySurfaceIntersections
channels (when MaxRaySurfaceIntersections = 1 there is 1 channel).
The format is FITS.
Leaving empty will result in no file being written.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"depth_map.fits"\f[]
.IP \[bu] 2
\f[C]"/tmp/out.fits"\f[]
.SS RadialDistMapFileName
.SS Description
.PP
A filename (or full path) for the distance of each ray\-surface
intersection point from the line joining reference and target ROI
centre\-of\-masses.
This helps quantify position in 3D.
Has DICOM coordinate system units.
This image is potentially multi\-channel with MaxRaySurfaceIntersections
channels (when MaxRaySurfaceIntersections = 1 there is 1 channel).
The format is FITS.
Leaving empty will result in no file being written.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"radial_dist_map.fits"\f[]
.IP \[bu] 2
\f[C]"/tmp/out.fits"\f[]
.SS ROISurfaceMeshFileName
.SS Description
.PP
A filename (or full path) for the (pre\-subdivided) surface mesh that is
contructed from the ROI contours.
The format is OFF.
This file is mostly useful for inspection of the surface or comparison
with contours.
Leaving empty will result in no file being written.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/roi_surface_mesh.off"\f[]
.IP \[bu] 2
\f[C]"roi_surface_mesh.off"\f[]
.SS SubdividedROISurfaceMeshFileName
.SS Description
.PP
A filename (or full path) for the Loop\-subdivided surface mesh that is
contructed from the ROI contours.
The format is OFF.
This file is mostly useful for inspection of the surface or comparison
with contours.
Leaving empty will result in no file being written.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/subdivided_roi_surface_mesh.off"\f[]
.IP \[bu] 2
\f[C]"subdivided_roi_surface_mesh.off"\f[]
.SS ROICOMCOMLineFileName
.SS Description
.PP
A filename (or full path) for the line segment that connected the
centre\-of\-mass (COM) of reference and target ROI.
The format is OFF.
This file is mostly useful for inspection of the surface or comparison
with contours.
Leaving empty will result in no file being written.
.SS Default
.IP \[bu] 2
\f[C]""\f[]
.SS Examples
.IP \[bu] 2
\f[C]""\f[]
.IP \[bu] 2
\f[C]"/tmp/roi_com_com_line.off"\f[]
.IP \[bu] 2
\f[C]"roi_com_com_line.off"\f[]
.SS NormalizedReferenceROILabelRegex
.SS Description
.PP
A regex matching reference ROI labels/names to consider.
The default will match all available ROIs, which is non\-sensical.
The reference ROI is used to orient the cleaving plane to trim the grid
surface mask.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Prostate.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Kidney"\f[]
.IP \[bu] 2
\f[C]"Gross\ Liver"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ReferenceROILabelRegex
.SS Description
.PP
A regex matching reference ROI labels/names to consider.
The default will match all available ROIs, which is non\-sensical.
The reference ROI is used to orient the cleaving plane to trim the grid
surface mask.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*[pP]rostate.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS SourceDetectorRows
.SS Description
.PP
The number of rows in the resulting images, which also defines how many
rays are used.
(Each pixel in the source image represents a single ray.) Setting too
fine relative to the surface mask grid or dose grid is futile.
.SS Default
.IP \[bu] 2
\f[C]"1024"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"100"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.IP \[bu] 2
\f[C]"4096"\f[]
.SS SourceDetectorColumns
.SS Description
.PP
The number of columns in the resulting images.
(Each pixel in the source image represents a single ray.) Setting too
fine relative to the surface mask grid or dose grid is futile.
.SS Default
.IP \[bu] 2
\f[C]"1024"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"100"\f[]
.IP \[bu] 2
\f[C]"128"\f[]
.IP \[bu] 2
\f[C]"1024"\f[]
.IP \[bu] 2
\f[C]"4096"\f[]
.SS MeshingAngularBound
.SS Description
.PP
The minimum internal angle each triangle facet must have in the surface
mesh (in degrees).
The computation may become unstable if an angle larger than 30 degree is
specified.
Note that for intersection purposes triangles with small angles isn't a
big deal.
Rather, having a large minimal angle can constrain the surface in
strange ways.
Consult the CGAL `3D Surface Mesh Generation' package documentation for
additional info.
.SS Default
.IP \[bu] 2
\f[C]"1.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.IP \[bu] 2
\f[C]"25.0"\f[]
.IP \[bu] 2
\f[C]"30.0"\f[]
.SS MeshingFacetSphereRadiusBound
.SS Description
.PP
The maximum radius of facet\-bounding spheres, which are centred on each
facet (one per facet) and grown as large as possible without enclosing
any facet vertices.
In a nutshell, this controls the maximum individual facet size.
Units are in DICOM space.
Setting too low will cause triangulation to be slow and many facets; it
is recommended instead to rely on subdivision to create a smooth surface
approximation.
Consult the CGAL `3D Surface Mesh Generation' package documentation for
additional info.
.SS Default
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS MeshingCentreCentreBound
.SS Description
.PP
The maximum facet centre\-centre distance between facet circumcentres
and facet\-bounding spheres, which are centred on each facet (one per
facet) and grown as large as possible without enclosing any facet
vertices.
In a nutshell, this controls the trade\-off between minimizing deviation
from the (implicit) ROI contour\-derived surface and having smooth
connectivity between facets.
Units are in DICOM space.
Setting too low will cause triangulation to be slow and many facets; it
is recommended instead to rely on subdivision to create a smooth surface
approximation.
Consult the CGAL `3D Surface Mesh Generation' package documentation for
additional info.
.SS Default
.IP \[bu] 2
\f[C]"5.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"2.0"\f[]
.IP \[bu] 2
\f[C]"5.0"\f[]
.IP \[bu] 2
\f[C]"10.0"\f[]
.SS MeshingSubdivisionIterations
.SS Description
.PP
The number of iterations of Loop's subdivision to apply to the surface
mesh.
The aim of subdivision in this context is to have a smooth surface to
work with, but too many applications will create too many facets.
More facets will not lead to more precise results beyond a certain
(modest) amount of smoothing.
If the geometry is relatively spherical already, and meshing bounds
produce reasonably smooth (but `blocky') surface meshes, then 2\-3
iterations should suffice.
More than 3\-4 iterations will almost always be inappropriate.
.SS Default
.IP \[bu] 2
\f[C]"2"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.IP \[bu] 2
\f[C]"3"\f[]
.SS MaxRaySurfaceIntersections
.SS Description
.PP
The maximum number of ray\-surface intersections to accumulate before
retiring each ray.
Note that intersections are sorted spatially by their distance to the
detector, and those closest to the detector are considered first.
If the ROI surface is opaque, setting this value to 1 will emulate
visibility.
Setting to 2 will permit rays continue through the ROI and pass through
the other side; dose will be the accumulation of dose at each
ray\-surface intersection.
This value should most often be 1 or some very high number (e.g., 1000)
to make the surface either completely opaque or completely transparent.
(A transparent surface may help to visualize geometrical `folds' or
other surface details of interest.)
.SS Default
.IP \[bu] 2
\f[C]"1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"4"\f[]
.IP \[bu] 2
\f[C]"1000"\f[]
.SS OnlyGenerateSurface
.SS Description
.PP
Stop processing after writing the surface and subdivided surface meshes.
This option is primarily used for debugging and visualization.
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS ThresholdImages
.SS Description
.PP
This operation applies thresholds to images.
.SS Notes
.IP \[bu] 2
This routine operates on individual images.
When thresholds are specified on a percentile basis, each image is
considered separately and therefore each image may be thresholded with
different values.
.SS Parameters
.IP \[bu] 2
Lower
.IP \[bu] 2
Low
.IP \[bu] 2
Upper
.IP \[bu] 2
High
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.SS Lower
.SS Description
.PP
The lower bound (inclusive).
Pixels with values < this number are replaced with the `low' value.
If this number is followed by a `%', the bound will be scaled between
the min and max pixel values [0\-100%].
If this number is followed by `tile', the bound will be replaced with
the corresponding percentile [0\-100tile].
Note that upper and lower bounds can be specified separately (e.g.,
lower bound is a percentage, but upper bound is a percentile).
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1E\-99"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"0.2%"\f[]
.IP \[bu] 2
\f[C]"23tile"\f[]
.IP \[bu] 2
\f[C]"23.123\ tile"\f[]
.SS Low
.SS Description
.PP
The value a pixel will take when below the lower threshold.
.SS Default
.IP \[bu] 2
\f[C]"\-inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1000.0"\f[]
.IP \[bu] 2
\f[C]"\-inf"\f[]
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Upper
.SS Description
.PP
The upper bound (inclusive).
Pixels with values > this number are replaced with the `high' value.
If this number is followed by a `%', the bound will be scaled between
the min and max pixel values [0\-100%].
If this number is followed by `tile', the bound will be replaced with
the corresponding percentile [0\-100tile].
Note that upper and lower bounds can be specified separately (e.g.,
lower bound is a percentage, but upper bound is a percentile).
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"1.0"\f[]
.IP \[bu] 2
\f[C]"1E\-99"\f[]
.IP \[bu] 2
\f[C]"2.34"\f[]
.IP \[bu] 2
\f[C]"98.12%"\f[]
.IP \[bu] 2
\f[C]"94tile"\f[]
.IP \[bu] 2
\f[C]"94.123\ tile"\f[]
.SS High
.SS Description
.PP
The value a pixel will take when above the upper threshold.
.SS Default
.IP \[bu] 2
\f[C]"inf"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"1000.0"\f[]
.IP \[bu] 2
\f[C]"inf"\f[]
.IP \[bu] 2
\f[C]"nan"\f[]
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
.SS Default
.IP \[bu] 2
\f[C]"0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"last"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS TrimROIDose
.SS Description
.PP
This operation provides a simplified interface for overriding the dose
within a ROI.
For example, this operation can be used to modify a base plan by
eliminating dose that coincides with a PTV/CTV/GTV/ROI etc.
.SS Notes
.IP \[bu] 2
This operation performs the opposite of the `Crop' operation, which
trims the dose outside a ROI.
.IP \[bu] 2
The inclusivity of a dose voxel that straddles the ROI boundary can be
specified in various ways.
Refer to the Inclusivity parameter documentation.
.IP \[bu] 2
By default this operation only overrides dose within a ROI.
The opposite, overriding dose outside of a ROI, can be accomplished
using the expert interface.
.SS Parameters
.IP \[bu] 2
Channel
.IP \[bu] 2
ImageSelection
.IP \[bu] 2
ContourOverlap
.IP \[bu] 2
Inclusivity
.IP \[bu] 2
ExteriorVal
.IP \[bu] 2
InteriorVal
.IP \[bu] 2
ExteriorOverwrite
.IP \[bu] 2
InteriorOverwrite
.IP \[bu] 2
NormalizedROILabelRegex
.IP \[bu] 2
ROILabelRegex
.IP \[bu] 2
Filename
.IP \[bu] 2
ParanoiaLevel
.SS Channel
.SS Description
.PP
The image channel to use.
Zero\-based.
Use `\-1' to operate on all available channels.
.SS Default
.IP \[bu] 2
\f[C]"\-1"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"\-1"\f[]
.IP \[bu] 2
\f[C]"0"\f[]
.IP \[bu] 2
\f[C]"1"\f[]
.IP \[bu] 2
\f[C]"2"\f[]
.SS ImageSelection
.SS Description
.PP
Select image arrays to operate on.
Specifiers can be of two types: positional or metadata\-based key\@value
regex.
Positional specifiers can be `first', `last', `none', or `all' literals.
Additionally `#N' for some positive integer N selects the Nth image
array (with zero\-based indexing).
Likewise, `#\-N' selects the Nth\-from\-last image array.
Positional specifiers can be inverted by prefixing with a `!'.
Metadata\-based key\@value expressions are applied by matching the keys
verbatim and the values with regex.
In order to invert metadata\-based selectors, the regex logic must be
inverted (i.e., you can \f[I]not\f[] prefix metadata\-based selectors
with a `!').
Multiple criteria can be specified by separating them with a `;' and are
applied in the order specified.
Both positional and metadata\-based criteria can be mixed together.
Note that image arrays can hold anything, but will typically represent a
single contiguous 3D volume (i.e., a volumetric CT scan) or `4D'
time\-series.
Note regexes are case insensitive and should use extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]"all"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"last"\f[]
.IP \[bu] 2
\f[C]"first"\f[]
.IP \[bu] 2
\f[C]"all"\f[]
.IP \[bu] 2
\f[C]"none"\f[]
.IP \[bu] 2
\f[C]"#0"\f[]
.IP \[bu] 2
\f[C]"#\-0"\f[]
.IP \[bu] 2
\f[C]"!last"\f[]
.IP \[bu] 2
\f[C]"!#\-3"\f[]
.IP \[bu] 2
\f[C]"key\@.*value.*"\f[]
.IP \[bu] 2
\f[C]"key1\@.*value1.*;key2\@^value2$;first"\f[]
.SS ContourOverlap
.SS Description
.PP
Controls overlapping contours are treated.
The default `ignore' treats overlapping contours as a single contour,
regardless of contour orientation.
The option `honour_opposite_orientations' makes overlapping contours
with opposite orientation cancel.
Otherwise, orientation is ignored.
The latter is useful for Boolean structures where contour orientation is
significant for interior contours (holes).
The option `overlapping_contours_cancel' ignores orientation and cancels
all contour overlap.
.SS Default
.IP \[bu] 2
\f[C]"ignore"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"ignore"\f[]
.IP \[bu] 2
\f[C]"honour_opposite_orientations"\f[]
.IP \[bu] 2
\f[C]"overlapping_contours_cancel"\f[]
.IP \[bu] 2
\f[C]"honour_opps"\f[]
.IP \[bu] 2
\f[C]"overlap_cancel"\f[]
.SS Inclusivity
.SS Description
.PP
Controls how voxels are deemed to be `within' the interior of the
selected ROI(s).
The default `center' considers only the central\-most point of each
voxel.
There are two corner options that correspond to a 2D projection of the
voxel onto the image plane.
The first, `planar_corner_inclusive', considers a voxel interior if ANY
corner is interior.
The second, `planar_corner_exclusive', considers a voxel interior if ALL
(four) corners are interior.
.SS Default
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"center"\f[]
.IP \[bu] 2
\f[C]"centre"\f[]
.IP \[bu] 2
\f[C]"planar_corner_inclusive"\f[]
.IP \[bu] 2
\f[C]"planar_inc"\f[]
.IP \[bu] 2
\f[C]"planar_corner_exclusive"\f[]
.IP \[bu] 2
\f[C]"planar_exc"\f[]
.SS ExteriorVal
.SS Description
.PP
The value to give to voxels outside the specified ROI(s).
Note that this value will be ignored if exterior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS InteriorVal
.SS Description
.PP
The value to give to voxels within the volume of the specified ROI(s).
Note that this value will be ignored if interior overwrites are
disabled.
.SS Default
.IP \[bu] 2
\f[C]"0.0"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"0.0"\f[]
.IP \[bu] 2
\f[C]"\-1.0"\f[]
.IP \[bu] 2
\f[C]"1.23"\f[]
.IP \[bu] 2
\f[C]"2.34E26"\f[]
.SS ExteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels exterior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"false"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS InteriorOverwrite
.SS Description
.PP
Whether to overwrite voxels interior to the specified ROI(s).
.SS Default
.IP \[bu] 2
\f[C]"true"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"true"\f[]
.IP \[bu] 2
\f[C]"false"\f[]
.SS NormalizedROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*Body.*"\f[]
.IP \[bu] 2
\f[C]"Body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*Left.*Parotid.*|.*Right.*Parotid.*|.*Eye.*"\f[]
.IP \[bu] 2
\f[C]"Left\ Parotid|Right\ Parotid"\f[]
.SS ROILabelRegex
.SS Description
.PP
A regex matching ROI labels/names to consider.
The default will match all available ROIs.
Be aware that input spaces are trimmed to a single space.
If your ROI name has more than two sequential spaces, use regex to avoid
them.
All ROIs have to match the single regex, so use the `or' token if
needed.
Regex is case insensitive and uses extended POSIX syntax.
.SS Default
.IP \[bu] 2
\f[C]".*"\f[]
.SS Examples
.IP \[bu] 2
\f[C]".*"\f[]
.IP \[bu] 2
\f[C]".*body.*"\f[]
.IP \[bu] 2
\f[C]"body"\f[]
.IP \[bu] 2
\f[C]"Gross_Liver"\f[]
.IP \[bu] 2
\f[C]".*left.*parotid.*|.*right.*parotid.*|.*eyes.*"\f[]
.IP \[bu] 2
\f[C]"left_parotid|right_parotid"\f[]
.SS Filename
.SS Description
.PP
The filename (or full path name) to which the DICOM file should be
written.
.SS Default
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"/tmp/RD.dcm"\f[]
.IP \[bu] 2
\f[C]"./RD.dcm"\f[]
.IP \[bu] 2
\f[C]"RD.dcm"\f[]
.SS ParanoiaLevel
.SS Description
.PP
At low paranoia setting, only top\-level UIDs are replaced.
At medium paranoia setting, many UIDs, descriptions, and labels are
replaced, but the PatientID and FrameOfReferenceUID are retained.
The high paranoia setting is the same as the medium setting, but the
PatientID and FrameOfReferenceUID are also replaced.
(Note: this is not a full anonymization.) Use the low setting if you
want to retain linkage to the originating data set.
Use the medium setting if you don't.
Use the high setting if your TPS goes overboard linking data sets by
PatientID and/or FrameOfReferenceUID.
.SS Default
.IP \[bu] 2
\f[C]"medium"\f[]
.SS Examples
.IP \[bu] 2
\f[C]"low"\f[]
.IP \[bu] 2
\f[C]"medium"\f[]
.IP \[bu] 2
\f[C]"high"\f[]
.SS UBC3TMRI_DCE
.SS Description
.PP
This operation is used to generate dynamic contrast\-enhanced MRI
contrast enhancement maps.
.SS Parameters
.PP
No registered options.
.SS UBC3TMRI_DCE_Differences
.SS Description
.PP
This operation is used to generate dynamic contrast\-enhanced MRI
contrast enhancement maps.
.SS Notes
.IP \[bu] 2
This routine generates difference maps using both long DCE scans.
Thus it takes up a LOT of memory! Try avoid unnecessary copies of large
(temporally long) arrays.
.SS Parameters
.PP
No registered options.
.SS UBC3TMRI_DCE_Experimental
.SS Description
.PP
This operation is an experimental operation for processing dynamic
contrast\-enhanced MR images.
.SS Parameters
.PP
No registered options.
.SS UBC3TMRI_IVIM_ADC
.SS Description
.PP
This operation is an experimental operation for processing IVIM MR
images into ADC maps.
.SS Parameters
.PP
No registered options.
.SH Known Issues and Limitations
.SS Hanging on Debian
.PP
The SFML_Viewer operation hangs on some systems after viewing a plot
with Gnuplot.
This stems from a known issue in Ygor.
.SS Build Requirements
.PP
DICOMautomaton depends on several heavily templated libraries and
external projects.
It requires a considerable amount of memory to build.
.SS DICOM\-RT Support Incomplete
.PP
Support for the DICOM Radiotherapy extensions are limited.
In particular, only RTDOSE files can currently be exported, and RTPLAN
files are not supported at all.
Read support for DICOM image modalities and RTSTRUCTS are generally
supported well.
Broader DICOM support is planned for a future release.
